{"version":3,"sources":["/home/ubuntu/workspace/src async","/home/ubuntu/workspace/src/app/app.component.css","/home/ubuntu/workspace/src/app/app.component.html","/home/ubuntu/workspace/src/app/app.component.ts","/home/ubuntu/workspace/src/app/app.module.ts","/home/ubuntu/workspace/src/app/login/login.component.css","/home/ubuntu/workspace/src/app/login/login.component.html","/home/ubuntu/workspace/src/app/login/login.component.ts","/home/ubuntu/workspace/src/app/movie/movie.component.css","/home/ubuntu/workspace/src/app/movie/movie.component.html","/home/ubuntu/workspace/src/app/movie/movie.component.ts","/home/ubuntu/workspace/src/app/movies/movies.component.css","/home/ubuntu/workspace/src/app/movies/movies.component.html","/home/ubuntu/workspace/src/app/movies/movies.component.ts","/home/ubuntu/workspace/src/app/services/movie.service.ts","/home/ubuntu/workspace/src/app/services/session.service.ts","/home/ubuntu/workspace/src/environments/environment.ts","/home/ubuntu/workspace/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../../../../src async recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ubuntu/workspace/src async\n// module id = ../../../../../src async recursive\n// module chunks = 1","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"body {\\n    background: rgb(245, 247, 246);\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ubuntu/workspace/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = 1","module.exports = \"<nav>\\n  <div class=\\\"nav-wrapper\\\">\\n    <a href=\\\"/\\\" class=\\\"brand-logo\\\">Logo</a>\\n    <ul id=\\\"nav-mobile\\\" class=\\\"right\\\">\\n        <li><a routerLink=\\\"/movies/now_playing\\\">Movies</a></li>\\n        <li><a>More Coming Soon</a></li>\\n        <li *ngIf=\\\"sessionId != ''\\\"><a>{{ username }}</a></li>\\n        <li *ngIf=\\\"sessionId != ''\\\"><a (click)=\\\"logout()\\\">Logout</a></li>\\n    </ul>\\n  </div>\\n</nav>\\n<!--The whole content below can be removed with the new code.-->\\n<div class=\\\"row\\\" *ngIf=\\\"sessionId == ''\\\">\\n    <form class=\\\"col s12\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"input-field col s12\\\">\\n                <input id=\\\"username\\\" name=\\\"username\\\" type=\\\"text\\\" class=\\\"validate\\\" [(ngModel)]=\\\"username\\\">\\n                <label for=\\\"username\\\">Username</label>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"input-field col s12\\\">\\n                <input id=\\\"password\\\" name=\\\"password\\\" type=\\\"password\\\" class=\\\"validate\\\" [(ngModel)]=\\\"password\\\">\\n                <label for=\\\"password\\\">Password</label>\\n            </div>\\n        </div>\\n        <a (click)=\\\"login()\\\" class=\\\"waves-effect waves-light btn\\\">Login</a>\\n    </form>\\n</div>\\n<div class=\\\"\\\">\\n  <h1 class=\\\"text-center\\\">Welcome to {{title}}!!</h1>\\n  <router-outlet></router-outlet>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ubuntu/workspace/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\nimport { SessionService } from './services/session.service';\nimport { Token } from './models/token';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title: string = 'Movies Paradise';\n  username: string = 'samliweisen';\n  password: string = 'kanamemadoka2017';\n  token: Token;\n  sessionId: string = '';\n  \n  constructor(private sessionService: SessionService) {}\n  \n  login(): void {\n    this.sessionService.getToken(this.username, this.password).then(res => this.sessionId = res.session_id);\n  }\n  \n  logout(): void {\n    this.sessionId = '';\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/ubuntu/workspace/src/app/app.component.ts","import { BrowserModule, Title } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule }   from '@angular/router';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MdGridListModule, MdCardModule } from '@angular/material';\nimport { HttpModule } from '@angular/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { MoviesComponent } from './movies/movies.component';\nimport { MovieComponent } from './movie/movie.component';\n\nimport { MovieService } from './services/movie.service';\nimport { SessionService } from './services/session.service';\nimport { LoginComponent } from './login/login.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MoviesComponent,\n    MovieComponent,\n    LoginComponent\n  ],\n  imports: [\n    FormsModule,\n    BrowserAnimationsModule,\n    BrowserModule,\n    HttpModule,\n    MdGridListModule,\n    MdCardModule,\n    RouterModule.forRoot([\n      {\n        path: 'login',\n        component: LoginComponent\n      },\n      {\n        path: 'movies',\n        component: MoviesComponent\n      },\n      {\n        path: 'movies/:type',\n        component: MoviesComponent\n      },\n      {\n        path: 'movie/:id',\n        component: MovieComponent\n      },\n      {\n        path: 'movie/:id/:section',\n        component: MovieComponent\n      }\n    ]),\n  ],\n  providers: [\n    Title,\n    MovieService,\n    SessionService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /home/ubuntu/workspace/src/app/app.module.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ubuntu/workspace/src/app/login/login.component.css\n// module id = ../../../../../src/app/login/login.component.css\n// module chunks = 1","module.exports = \"<div class=\\\"row\\\">\\n    <form class=\\\"col s12\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"input-field col s12\\\">\\n                <input id=\\\"username\\\" type=\\\"text\\\" class=\\\"validate\\\">\\n                <label for=\\\"username\\\">Username</label>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"input-field col s12\\\">\\n                <input id=\\\"password\\\" type=\\\"password\\\" class=\\\"validate\\\">\\n                <label for=\\\"password\\\">Password</label>\\n            </div>\\n        </div>\\n        <a class=\\\"waves-effect waves-light btn\\\">Login</a>\\n    </form>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ubuntu/workspace/src/app/login/login.component.html\n// module id = ../../../../../src/app/login/login.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/ubuntu/workspace/src/app/login/login.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"img {\\n    width: 100%;\\n}\\n\\n#header {\\n    padding-top: 40px;\\n    color: #ffffff;\\n    position: relative;\\n}\\n\\n.backdrop-poster {\\n    position: relative;\\n    box-shadow: 0px -66px 5px 5px #000 inset;\\n}\\n\\n.basic-info {\\n    position: absolute;\\n    bottom: 0;\\n    left: 0;\\n    background-color: rgba(0, 0, 0, 0.5);\\n    padding: 10px;\\n}\\n\\n.bg-black {\\n    background: #06131a;\\n    color: #ffffff;\\n}\\n\\n.data {\\n    margin-bottom: 50px;\\n}\\n\\n.label {\\n    color: #116f8c;\\n}\\n\\n.genre {\\n    display: inline-block;\\n    background: #ffffff;\\n    color: #000000;\\n    padding: 5px;\\n    border-radius: 5px;\\n    margin: 0 5px 5px 0;\\n    font-size: 11px;\\n}\\n\\n.release-date {\\n    opacity: 0.6;\\n}\\n\\n.card-content {\\n    padding: 10px;\\n}\\n\\n#casts .name {\\n    font-weight: bold;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ubuntu/workspace/src/app/movie/movie.component.css\n// module id = ../../../../../src/app/movie/movie.component.css\n// module chunks = 1","module.exports = \"<button (click)=\\\"goBack()\\\">Back</button>\\n\\n<div id=\\\"movie\\\" *ngIf=\\\"movie\\\">\\n    <div id=\\\"header\\\">\\n        <div class=\\\"backdrop-poster\\\">\\n            <img src=\\\"https://image.tmdb.org/t/p/w500{{movie.backdrop_path}}\\\" />\\n            <div class=\\\"basic-info\\\">\\n                <h5 class=\\\"movie-title\\\">{{ movie.title }}</h5>\\n                <span class=\\\"release-date\\\">{{movie.release_date.substr(0, 4)}}</span>\\n                <span class=\\\"rating\\\">{{movie.vote_average}}</span>\\n            </div>\\n        </div>\\n        <div class=\\\"info row\\\">\\n            <div class=\\\"bg-black row col s6\\\">\\n                <div class=\\\"col s4\\\">\\n                    <img src=\\\"https://image.tmdb.org/t/p/w500{{movie.poster_path}}\\\" />\\n                </div>\\n                <div class=\\\"col s8\\\">\\n                    <p>{{movie.tagline}}</p>\\n                    <p>{{ movie.overview }}</p>\\n                    <div class=\\\"genres\\\">\\n                        <span class=\\\"label\\\">Genres: </span>\\n                        <span *ngFor=\\\"let genre of movie.genres\\\" class=\\\"genre\\\">{{genre.name}}</span>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"col s6\\\">\\n                <div id=\\\"videos\\\" *ngIf=\\\"movieVideo\\\">\\n                    <iframe id=\\\"ytplayer\\\" type=\\\"text/html\\\" width=\\\"100%\\\" height=\\\"315\\\"\\n                        [src]=\\\"getYoutubeEmbed(movieVideo.results[0].key)\\\"\\n                        frameborder=\\\"0\\\">\\n                    </iframe>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"bg-black col s2\\\">\\n            <h5>Movie Data</h5>\\n            <div class=\\\"data\\\">\\n                <h6 class=\\\"label\\\">Status:</h6>\\n                <p>{{movie.status}}</p>\\n            </div>\\n            <div class=\\\"data\\\">\\n                <h6 class=\\\"label\\\">Release Information:</h6>\\n                <p>{{movie.release_date}}</p>\\n            </div>\\n            <div class=\\\"data\\\">\\n                <h6 class=\\\"label\\\">Original Language:</h6>\\n                <p>{{movie.original_language}}</p>\\n            </div>\\n            <div class=\\\"data\\\">\\n                <h6 class=\\\"label\\\">Runtime:</h6>\\n                <p>{{movie.runtime}}</p>\\n            </div>\\n            <div class=\\\"data\\\">\\n                <h6 class=\\\"label\\\">Revenue:</h6>\\n                <p>{{movie.revenue}}</p>\\n            </div>\\n            <div class=\\\"data\\\">\\n                <h6 class=\\\"label\\\">Homepage:</h6>\\n                <p><a href=\\\"{{movie.homepage}}\\\" target=\\\"_blank\\\">{{movie.homepage}}</a></p>\\n            </div>\\n            <div class=\\\"data\\\">\\n                <h6 class=\\\"label\\\">Production Companies:</h6>\\n                <p *ngFor=\\\"let company of movie.production_companies\\\">{{company.name}}</p>\\n            </div>\\n        </div>\\n        <div class=\\\"col s10\\\">\\n            <div class=\\\"\\\" *ngIf=\\\"!section\\\">\\n                <div id=\\\"casts\\\" *ngIf=\\\"movieCredits\\\">\\n                    <div class=\\\"row\\\">\\n                        <h5 class=\\\"left\\\">Feature Casts</h5>\\n                        <a class=\\\"right\\\" [routerLink]=\\\"['/movie', movie.id, 'casts']\\\">View full casts</a>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div *ngFor=\\\"let cast of movieCredits.cast.slice(0, 6)\\\" class=\\\"col s2 m2 l2\\\">\\n                            <div class=\\\"card\\\">\\n                                <div class=\\\"card-image\\\">\\n                                    <img src=\\\"https://image.tmdb.org/t/p/w500{{cast.profile_path}}\\\">\\n                                </div>\\n                                <div class=\\\"card-content\\\">\\n                                    <span class=\\\"label\\\">{{ cast.name }}</span>\\n                                    <span>{{ cast.character }}</span>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div id=\\\"crews\\\" *ngIf=\\\"movieCredits\\\">\\n                    <div class=\\\"row\\\">\\n                        <h5 class=\\\"left\\\">Feature Crews</h5>\\n                        <a class=\\\"right\\\" [routerLink]=\\\"['/movie', movie.id, 'casts']\\\">View full crews</a>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div *ngFor=\\\"let crew of movieCredits.crew.slice(0, 6)\\\" class=\\\"col s2 m2 l2\\\">\\n                            <div class=\\\"card\\\">\\n                                <div class=\\\"card-image\\\">\\n                                    <img src=\\\"https://image.tmdb.org/t/p/w500{{crew.profile_path}}\\\">\\n                                </div>\\n                                <div class=\\\"card-content\\\">\\n                                    <span class=\\\"label\\\">{{ crew.name }}</span>\\n                                    <span>{{ crew.character }}</span>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                \\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"\\\">\\n        <ul class=\\\"tabs\\\">\\n            <li class=\\\"tab col s3\\\"><a (click)=\\\"changeSection('reviews')\\\" [routerLink]=\\\"['/movie', movie.id, 'reviews']\\\">Reviews</a></li>\\n            <li class=\\\"tab col s3\\\"><a (click)=\\\"changeSection('videos')\\\" [routerLink]=\\\"['/movie', movie.id, 'videos']\\\">Videos</a></li>\\n            <li class=\\\"tab col s3\\\"><a (click)=\\\"changeSection('images')\\\" [routerLink]=\\\"['/movie', movie.id, 'images']\\\">Images</a></li>\\n            <li class=\\\"tab col s3\\\"><a (click)=\\\"changeSection('casts')\\\" [routerLink]=\\\"['/movie', movie.id, 'casts']\\\">Casts</a></li>\\n        </ul>\\n    </div>\\n    <div class=\\\"container\\\" *ngIf=\\\"section == 'reviews'\\\">\\n        <div id=\\\"reviews\\\" *ngIf=\\\"movieReviews\\\">\\n            <h3>Reviews</h3>\\n            <div class=\\\"row card\\\" *ngFor=\\\"let review of movieReviews.results\\\">\\n                <div class=\\\"col s2\\\">\\n                    <p>{{ review.author }}</p>\\n                </div>\\n                <div class=\\\"col s10\\\">\\n                    <p>{{ review.content }}</p>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"container\\\" *ngIf=\\\"section == 'casts'\\\">\\n        <div class=\\\"row\\\" *ngIf=\\\"movieCredits\\\">\\n            <div class=\\\"col s6\\\">\\n                <div class=\\\"row\\\" *ngFor=\\\"let cast of movieCredits.cast\\\">\\n                    <div class=\\\"col s4\\\">\\n                        <img *ngIf=\\\"cast.profile_path\\\" src=\\\"https://image.tmdb.org/t/p/w500{{cast.profile_path}}\\\">\\n                    </div>\\n                    <div class=\\\"col s8\\\">\\n                        <p>{{ cast.name }}</p>\\n                        <p>{{ cast.character }}</p>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"col s6\\\">\\n                <div class=\\\"row\\\" *ngFor=\\\"let crew of movieCredits.crew\\\">\\n                    <div class=\\\"col s4\\\">\\n                        <img *ngIf=\\\"crew.profile_path\\\" src=\\\"https://image.tmdb.org/t/p/w500{{crew.profile_path}}\\\">\\n                    </div>\\n                    <div class=\\\"col s8\\\">\\n                        <p>{{ crew.name }}</p>\\n                        <p>{{ crew.job }}</p>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"container\\\" *ngIf=\\\"section == 'images'\\\">\\n        <div id=\\\"images\\\" *ngIf=\\\"movieImages\\\">\\n            <h3>Posters</h3>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col l2\\\" *ngFor=\\\"let poster of movieImages.posters\\\">\\n                    <img src=\\\"https://image.tmdb.org/t/p/w500{{poster.file_path}}\\\" />\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col l12\\\" *ngFor=\\\"let backdrop of movieImages.backdrops\\\">\\n                    <img src=\\\"https://image.tmdb.org/t/p/w500{{backdrop.file_path}}\\\" />\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ubuntu/workspace/src/app/movie/movie.component.html\n// module id = ../../../../../src/app/movie/movie.component.html\n// module chunks = 1","import { Component, Input, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params }   from '@angular/router';\nimport { Location }                 from '@angular/common';\nimport { Title, DomSanitizer } from '@angular/platform-browser';\n\n//Import the switchMap operator to use later with the route parameters Observable.\nimport 'rxjs/add/operator/switchMap';\n\nimport { Movie } from '../models/movie';\nimport { MovieCredits } from '../models/movieCredits';\nimport { MovieImage } from '../models/movieImage';\nimport { MovieVideo } from '../models/movieVideo';\nimport { MovieReviews } from '../models/movieReviews';\nimport { MovieService } from '../services/movie.service';\n\n@Component({\n  selector: 'movie',\n  templateUrl: './movie.component.html',\n  styleUrls: ['./movie.component.css']\n})\nexport class MovieComponent implements OnInit {\n  movie: Movie;\n  movieCredits: MovieCredits;\n  movieImages: MovieImage;\n  movieVideo: MovieVideo;\n  movieReviews: MovieReviews;\n  section: String;\n\n  constructor(\n    private movieService: MovieService,\n    private route: ActivatedRoute,\n    private location: Location,\n    private titleService: Title,\n    private sanitizier: DomSanitizer\n  ) { }\n\n  ngOnInit() {\n    if (typeof this.route.snapshot.params['section'] != 'undefined') {\n      this.section = this.route.snapshot.params['section'];\n    }\n    this.route.params.subscribe(params => {\n      this.movieService.getMovieDetail(+params['id'])\n      .then(movie => {\n        this.movie = movie;\n        console.log(movie);\n        this.titleService.setTitle(movie.title);\n      });\n    });\n    \n    this.route.params.subscribe(params => {\n      this.movieService.getMovieImages(+params['id'])\n      .then(movieImages => this.movieImages = movieImages);\n    });\n    \n    this.route.params.subscribe(params => {\n      this.movieService.getMovieCredits(+params['id'])\n      .then(movieCredits => this.movieCredits = movieCredits);\n    });\n    \n    this.route.params.subscribe(params => {\n      this.movieService.getMovieVideos(+params['id'])\n      .then(movieVideo => {this.movieVideo = movieVideo;console.log(movieVideo);});\n    });\n    \n    this.route.params.subscribe(params => {\n      this.movieService.getMovieReviews(+params['id'])\n      .then(movieReviews => {\n        this.movieReviews = movieReviews;\n        console.log(movieReviews);\n      });\n    })\n  }\n  \n  goBack(): void {\n    this.location.back();\n  }\n  \n  changeSection(section): void {\n    this.section = section;\n  }\n  \n  getYoutubeEmbed(key) {\n    return this.sanitizier.bypassSecurityTrustResourceUrl('https://www.youtube.com/embed/' + key + '?autoplay=0');\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/ubuntu/workspace/src/app/movie/movie.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".selected {\\n    background: #cccccc;\\n}\\n\\n.movie {\\n    margin-bottom: 20px;\\n    border-radius: 5px;\\n    position: relative;\\n}\\n\\n.rating {\\n    border: 1px solid;\\n    border-radius: 5px;\\n    padding: 5px;\\n    background: rgb(255, 255, 255);\\n}\\n\\n.movie .rating {\\n    position: absolute;\\n    top: 0;\\n    right: 0;\\n}\\n\\nimg {\\n    width: 100%;\\n    border-radius: 5px;\\n}\\n\\na.active {\\n    text-decoration: underline;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ubuntu/workspace/src/app/movies/movies.component.css\n// module id = ../../../../../src/app/movies/movies.component.css\n// module chunks = 1","module.exports = \"<ul class=\\\"tabs\\\">\\n    <li class=\\\"tab col s3\\\" *ngFor=\\\"let link of links\\\"><a [class.active]=\\\"selectedLink == link\\\" [routerLink]=\\\"['/movies', link]\\\" (click)=\\\"selectedLink=link\\\">{{formateTitle(link)}}</a></li>\\n</ul>\\n<div class=\\\"row\\\" *ngIf=\\\"movies\\\">\\n    <a class=\\\"movie-wrapper col s6 m4 l3\\\" *ngFor=\\\"let movie of movies.results\\\" [routerLink]=\\\"['/movie', movie.id]\\\">\\n        <div class=\\\"movie\\\">\\n            <img src=\\\"https://image.tmdb.org/t/p/w500{{movie.poster_path}}\\\" alt=\\\"{{ movie.title }}\\\" />\\n            <span class=\\\"rating\\\">{{movie.vote_average}}</span>\\n        </div>\\n    </a>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ubuntu/workspace/src/app/movies/movies.component.html\n// module id = ../../../../../src/app/movies/movies.component.html\n// module chunks = 1","import { Title } from '@angular/platform-browser';\nimport { ActivatedRoute, Params }   from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\n\nimport { Movie } from '../models/movie';\nimport { Movies } from '../models/movies';\nimport { MovieService } from '../services/movie.service';\n\n@Component({\n  selector: 'movies',\n  templateUrl: './movies.component.html',\n  styleUrls: ['./movies.component.css']\n})\nexport class MoviesComponent implements OnInit {\n\n  selectedLink: String;\n  links: Array<String>;\n  movies: Movies;\n  selectedMovie: Movie;\n  \n  constructor(\n    private titleService: Title,\n    private movieService: MovieService,\n    private route: ActivatedRoute,\n  ) {}\n  \n  ngOnInit(): void {\n    this.links = [\n      'now_playing',\n      'popular',\n      'top_rated',\n      'upcoming'\n    ];\n    this.selectedLink = 'now_playing';\n\n    this.route.params\n    // (+) converts string 'id' to a number\n    .switchMap((params: Params) => this.movieService.getMovies(params['type']))\n    .subscribe((movies: Movies) => {\n      this.movies = movies;\n      // set Page title\n      var title = this.formateTitle(this.route.snapshot.params['type']);\n      this.titleService.setTitle(title);\n    });\n  }\n  \n  onSelect(movie: Movie): void {\n    this.selectedMovie = movie;\n  }\n  \n  //need to find out string vs String\n  formateTitle(title: string): string {\n    // format 'now_playing' to 'Now Playing'\n    const result = title.split('_').map(function(word) {\n      //make word to Capitalize\n      return word.charAt(0).toUpperCase() + word.slice(1);\n    }).join(' ');\n    return result;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/ubuntu/workspace/src/app/movies/movies.component.ts","import { Injectable } from '@angular/core';\nimport { Headers, Http } from '@angular/http';\n\nimport 'rxjs/add/operator/toPromise';\n\nimport { Movies } from '../models/movies';\nimport { Movie } from '../models/movie';\nimport { MovieCredits } from '../models/movieCredits';\nimport { MovieImage } from '../models/movieImage';\nimport { MovieVideo } from '../models/movieVideo';\nimport { MovieReviews } from '../models/movieReviews';\n\n@Injectable()\nexport class MovieService {\n    \n    private baseUrl = 'https://api.themoviedb.org/3/movie/';\n    private apiKey = '?api_key=8109b23cc9abaf02cf3c699ec62ccc19';\n    private headers = new Headers({'Content-Type': 'application/json'});\n\n    constructor(private http: Http) { }\n    \n    getMovies(type: String): Promise<Movies> {\n        const moviesUrl = this.baseUrl + type + this.apiKey + '&page=1';\n        const movies = this.http.get(moviesUrl)\n                        .toPromise()\n                        .then(response => response.json() as Movies)\n                        .catch(this.handleError);\n        return movies;\n    }\n    \n    getMovieDetail(id: number): Promise<Movie> {\n        const movieDetail = this.baseUrl + id + this.apiKey;\n        const movie = this.http.get(movieDetail)\n                        .toPromise()\n                        .then(response => response.json() as Movie)\n                        .catch(this.handleError);\n        return movie;\n    }\n    \n    getMovieImages(id: number): Promise<MovieImage> {\n        const movieCredits = this.baseUrl + id + '/images' + this.apiKey;\n        return this.http.get(movieCredits)\n                    .toPromise()\n                    .then(res => res.json() as MovieImage)\n                    .catch(this.handleError);\n    }\n    \n    getMovieCredits(id: number): Promise<MovieCredits> {\n        const movieCredits = this.baseUrl + id + '/credits' + this.apiKey;\n        return this.http.get(movieCredits)\n                    .toPromise()\n                    .then(res => res.json() as MovieCredits)\n                    .catch(this.handleError);\n    }\n    \n    getMovieVideos(id: number): Promise<MovieVideo> {\n        const movieVideo = this.baseUrl + id + '/videos' + this.apiKey;\n        return this.http.get(movieVideo)\n                    .toPromise()\n                    .then(res => res.json() as MovieVideo)\n                    .catch(this.handleError);\n    }\n    \n    getMovieReviews(id: number): Promise<MovieReviews> {\n        const movieReviews = this.baseUrl + id +'/reviews' + this.apiKey;\n        return this.http.get(movieReviews)\n                    .toPromise()\n                    .then(res => res.json() as MovieReviews)\n                    .catch(this.handleError);\n    }\n    \n    private handleError(error: any): Promise<any> {\n        console.error('An error occurred', error); // for demo purposes only\n        return Promise.reject(error.message || error);\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/ubuntu/workspace/src/app/services/movie.service.ts","import { Injectable } from '@angular/core';\nimport { Headers, Http } from '@angular/http';\nimport { Token } from '../models/token';\nimport { Session } from '../models/session';\n\nimport 'rxjs/add/operator/toPromise';\n\n@Injectable()\nexport class SessionService {\n    private baseUrl = 'https://api.themoviedb.org/3/authentication/';\n    private apiKey = '?api_key=8109b23cc9abaf02cf3c699ec62ccc19';\n    \n    constructor(private http: Http) { }\n    \n    getToken(username: string, password: string): Promise<Session> {\n        const newTokenUrl = this.baseUrl + 'token/new' + this.apiKey;\n        const newToken = this.http.get(newTokenUrl)\n                        .toPromise()\n                        .then(response => this.validateLogin(username, password, response.json()))\n                        .catch(this.handleError);\n        return newToken;\n    }\n    \n    validateLogin(username: string, password: string, token: Token): Promise<Token> {\n        const data = '&username=' + username + '&password=' + password + '&request_token=' + token.request_token;\n        const validateUrl = this.baseUrl + 'token/validate_with_login' + this.apiKey + data;\n        const validateToken = this.http.get(validateUrl)\n                                .toPromise()\n                                .then(response => this.getSession(response.json().request_token))\n                                .catch(this.handleError);\n        return validateToken;\n    }\n    \n    getSession(request_token: string): Promise<Token> {\n        const sessionUrl = this.baseUrl + 'session/new' + this.apiKey + '&request_token=' + request_token;\n        const session = this.http.get(sessionUrl)\n                                .toPromise()\n                                .then(response => response.json() as Token)\n                                .catch(this.handleError);\n        return session;\n    }\n    \n    private handleError(error: any): Promise<any> {\n        console.error('An error occurred', error); // for demo purposes only\n        return Promise.reject(error.message || error);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/ubuntu/workspace/src/app/services/session.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /home/ubuntu/workspace/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// /home/ubuntu/workspace/src/main.ts"],"sourceRoot":"webpack:///"}