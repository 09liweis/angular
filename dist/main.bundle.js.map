{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/components/movie-list/movie-list.component.css","./src/app/components/movie-list/movie-list.component.html","./src/app/components/movie-list/movie-list.component.ts","./src/app/components/movie/movie.component.css","./src/app/components/movie/movie.component.html","./src/app/components/movie/movie.component.ts","./src/app/components/person/person.component.css","./src/app/components/person/person.component.html","./src/app/components/person/person.component.ts","./src/app/login/login.component.css","./src/app/login/login.component.html","./src/app/login/login.component.ts","./src/app/models/cast.ts","./src/app/models/movie.ts","./src/app/models/movies.ts","./src/app/pages/home/home.component.css","./src/app/pages/home/home.component.html","./src/app/pages/home/home.component.ts","./src/app/pages/movie/movie.component.css","./src/app/pages/movie/movie.component.html","./src/app/pages/movie/movie.component.ts","./src/app/pages/movies/movies.component.css","./src/app/pages/movies/movies.component.html","./src/app/pages/movies/movies.component.ts","./src/app/pages/news/news.component.css","./src/app/pages/news/news.component.html","./src/app/pages/news/news.component.ts","./src/app/pages/persons/persons.component.css","./src/app/pages/persons/persons.component.html","./src/app/pages/persons/persons.component.ts","./src/app/pages/tvs/tvs.component.css","./src/app/pages/tvs/tvs.component.html","./src/app/pages/tvs/tvs.component.ts","./src/app/services/movie.service.ts","./src/app/services/news.service.ts","./src/app/services/person.service.ts","./src/app/services/session.service.ts","./src/app/services/tv.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"#nav {\\n    position: fixed;\\n    width: 100%;\\n    top: 0;\\n    background-color: rgba(51,51,51,.95);\\n    z-index: 11;\\n    padding: 10px 0;\\n}\\n#logo {\\n    display: inline-block;\\n    color: #ffffff;\\n    margin-right: 10px;\\n    font-size: 1.8em;\\n}\\n.nav__link {\\n    display: inline-block;\\n    margin-right: 10px;\\n    padding: 10px;\\n    color: #fcb208;\\n    -webkit-transition: color 0.3s;\\n    transition: color 0.3s;\\n    position: relative;\\n}\\n.nav__link:before {\\n    position: absolute;\\n    content: '';\\n    width: 0;\\n    height: 1px;\\n    bottom: 0;\\n    left: 0;\\n    background-color: #fcb208;\\n    -webkit-transition: width 0.4s ease;\\n    transition: width 0.4s ease;\\n}\\n.nav__link:hover:before {\\n    width: 100%;\\n}\\n#mainContainer {\\n    margin-top: 90px;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<nav id=\\\"nav\\\" role=\\\"navigation\\\" aria-label=\\\"main navigation\\\">\\n    <div class=\\\"container\\\">\\n        <a id=\\\"logo\\\" routerLink=\\\"/\\\">Movie Paradise</a>\\n        <a class=\\\"nav__link\\\" routerLink=\\\"/movies/now_playing\\\">Movies</a>\\n        <a class=\\\"nav__link\\\" routerLink=\\\"/tvs/airing_today/page/1\\\">Tv Show</a>\\n        <a class=\\\"nav__link\\\" routerLink=\\\"/persons/popular\\\">People</a>\\n        <a class=\\\"nav__link\\\" routerLink=\\\"/news\\\">News</a>\\n        <a class=\\\"nav__link\\\">More Coming Soon</a>\\n        <div class=\\\"navbar-item\\\" *ngIf=\\\"sessionId != ''\\\"><a>{{ username }}</a></div>\\n        <div class=\\\"navbar-item\\\" *ngIf=\\\"sessionId != ''\\\"><a (click)=\\\"logout()\\\">Logout</a></div>\\n    </div>\\n</nav>\\n\\n<!--The whole content below can be removed with the new code.-->\\n<!--<div class=\\\"row\\\" *ngIf=\\\"sessionId == ''\\\">-->\\n<!--    <form class=\\\"col s12\\\">-->\\n<!--        <div class=\\\"row\\\">-->\\n<!--            <div class=\\\"input-field col s12\\\">-->\\n<!--                <input id=\\\"username\\\" name=\\\"username\\\" type=\\\"text\\\" class=\\\"validate\\\" [(ngModel)]=\\\"username\\\">-->\\n<!--                <label for=\\\"username\\\">Username</label>-->\\n<!--            </div>-->\\n<!--        </div>-->\\n<!--        <div class=\\\"row\\\">-->\\n<!--            <div class=\\\"input-field col s12\\\">-->\\n<!--                <input id=\\\"password\\\" name=\\\"password\\\" type=\\\"password\\\" class=\\\"validate\\\" [(ngModel)]=\\\"password\\\">-->\\n<!--                <label for=\\\"password\\\">Password</label>-->\\n<!--            </div>-->\\n<!--        </div>-->\\n<!--        <a (click)=\\\"login()\\\" class=\\\"waves-effect waves-light btn\\\">Login</a>-->\\n<!--    </form>-->\\n<!--</div>-->\\n<div id=\\\"mainContainer\\\" class=\\\"container fluid\\\">\\n  <router-outlet></router-outlet>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { SessionService } from './services/session.service';\nimport { Token } from './models/token';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title: string = 'Movies Paradise';\n  username: string = 'samliweisen';\n  password: string = 'kanamemadoka2017';\n  token: Token;\n  sessionId: string = '';\n  \n  constructor(private sessionService: SessionService) {}\n  \n  login(): void {\n    this.sessionService.getToken(this.username, this.password).then(res => this.sessionId = res.session_id);\n  }\n  \n  logout(): void {\n    this.sessionId = '';\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule, Title } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule }   from '@angular/router';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpModule } from '@angular/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { MoviesComponent } from './pages/movies/movies.component';\nimport { MovieComponent } from './pages/movie/movie.component';\nimport { SingleMovieComponent } from './components/movie/movie.component';\n\nimport { MovieService } from './services/movie.service';\nimport { SessionService } from './services/session.service';\nimport { NewsService } from './services/news.service';\nimport { TvService } from './services/tv.service';\n\nimport { LoginComponent } from './login/login.component';\nimport { PersonComponent } from './components/person/person.component';\nimport { MovieListComponent } from './components/movie-list/movie-list.component';\nimport { PersonsComponent } from './pages/persons/persons.component';\nimport {PersonService} from './services/person.service';\nimport { NewsComponent } from './pages/news/news.component';\nimport { TvsComponent } from './pages/tvs/tvs.component';\nimport { HomeComponent } from './pages/home/home.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MoviesComponent,\n    MovieComponent,\n    SingleMovieComponent,\n    LoginComponent,\n    PersonComponent,\n    MovieListComponent,\n    NewsComponent,\n    TvsComponent,\n    PersonsComponent,\n    HomeComponent,\n  ],\n  imports: [\n    FormsModule,\n    BrowserAnimationsModule,\n    BrowserModule,\n    HttpModule,\n    RouterModule.forRoot([\n      {\n        path: '',\n        component: HomeComponent\n      },\n      {\n        path: 'login',\n        component: LoginComponent\n      },\n      {\n        path: 'news',\n        component: NewsComponent\n      },\n      {\n        path: 'tvs/:type',\n        component: TvsComponent\n      },\n      {\n        path: 'tvs/:type/page/:page',\n        component: TvsComponent\n      },\n      {\n        path: 'movies',\n        component: MoviesComponent\n      },\n      {\n        path: 'movies/:type',\n        component: MoviesComponent\n      },\n      {\n        path: 'movies/:type/page/:page',\n        component: MoviesComponent\n      },\n      {\n        path: 'movie/:id',\n        component: MovieComponent\n      },\n      {\n        path: 'movie/:id/:section',\n        component: MovieComponent\n      },\n      {\n        path:'persons/:type',\n        component:PersonsComponent\n      }\n      \n    ]),\n  ],\n  providers: [\n    Title,\n    MovieService,\n    PersonService,\n    NewsService,\n    TvService,\n    SessionService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/movie-list/movie-list.component.css\n// module id = ./src/app/components/movie-list/movie-list.component.css\n// module chunks = main","module.exports = \"<div class=\\\"columns is-mobile is-multiline\\\" *ngIf=\\\"movies\\\">\\n    <single-movie class=\\\"column is-6-mobile is-3-tablet is-2-desktop is-2-widescreen is-2-fullhd\\\" *ngFor=\\\"let movie of movies.results\\\" [movie]=movie></single-movie>\\n</div>\\n<nav class=\\\"pagination is-centered\\\" role=\\\"navigation\\\" aria-label=\\\"pagination\\\" *ngIf=\\\"totalPages\\\">\\n    <a class=\\\"pagination-previous\\\">Previous</a>\\n    <a class=\\\"pagination-next\\\">Next</a>\\n    <ul class=\\\"pagination-list\\\">\\n        <li *ngFor=\\\"let page of totalPages\\\">\\n            <a [routerLink]=\\\"['/',list + 's', type, 'page', (page+1)]\\\" class=\\\"pagination-link\\\" [class.is-current]=\\\"currentPage == (page+1)\\\"  aria-current=\\\"page\\\">{{page+1}}</a>\\n        </li>\\n    </ul>\\n</nav>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/movie-list/movie-list.component.html\n// module id = ./src/app/components/movie-list/movie-list.component.html\n// module chunks = main","import { Component, OnInit, Input } from '@angular/core';\nimport { Movies } from '../../models/movies';\n\n@Component({\n  selector: 'movie-list',\n  templateUrl: './movie-list.component.html',\n  styleUrls: ['./movie-list.component.css']\n})\nexport class MovieListComponent implements OnInit {\n  @Input() type: string;// current type of movie or tv\n  @Input() list: string;// movie or tv\n  @Input() totalPages: number;\n  @Input() currentPage: number;\n  @Input() movies: Movies;\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/movie-list/movie-list.component.ts","module.exports = \".movie {\\n    border-radius: 5px;\\n    position: relative;\\n    display: block;\\n    -webkit-transition: all 0.4s ease;\\n    transition: all 0.4s ease;\\n}\\n.movie:hover {\\n    \\n}\\n.movie__image {\\n    -webkit-transform: scale(1);\\n            transform: scale(1);\\n    -webkit-transition: -webkit-transform 0.4s ease;\\n    transition: -webkit-transform 0.4s ease;\\n    transition: transform 0.4s ease;\\n    transition: transform 0.4s ease, -webkit-transform 0.4s ease;\\n}\\n.movie__image:hover {\\n    -webkit-transform: rotate3d(1, 2, 1, 15deg);\\n            transform: rotate3d(1, 2, 1, 15deg);\\n}\\n.rating {\\n    border-radius: 5px;\\n    padding: 5px;\\n    background-color: #ffb207;\\n    color: #ffffff;\\n}\\n.movie_title {\\n    color: #cac1c1;\\n    font-size: 1rem;\\n}\\n.movie .rating {\\n    position: absolute;\\n    top: 12px;\\n    left: 12px;\\n}\\n.movie img {\\n    border-radius: 5px;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/movie/movie.component.css\n// module id = ./src/app/components/movie/movie.component.css\n// module chunks = main","module.exports = \"<a class=\\\"movie\\\" [routerLink]=\\\"['/movie', movie.id]\\\">\\n    <figure class=\\\"movie__poster\\\">\\n        <img class=\\\"movie__image\\\" src=\\\"https://image.tmdb.org/t/p/w500{{movie.poster_path}}\\\" alt=\\\"{{ movie.title }}\\\" />\\n    </figure>\\n    <div class=\\\"movie_title\\\">{{movie.title}}</div>\\n    <span class=\\\"rating\\\">{{movie.vote_average}}</span>\\n</a>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/movie/movie.component.html\n// module id = ./src/app/components/movie/movie.component.html\n// module chunks = main","import { Component, Input, OnInit } from '@angular/core';\nimport { Movie } from '../../models/movie';\n\n@Component({\n  selector: 'single-movie',\n  templateUrl: './movie.component.html',\n  styleUrls: ['./movie.component.css']\n})\nexport class SingleMovieComponent implements OnInit {\n  @Input() movie: Movie;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/movie/movie.component.ts","module.exports = \".cast__image img {\\n    border-radius: 5px;\\n}\\n.cast__info {\\n    background-color: #ffffff;\\n    padding: 10px;\\n}\\n.cast__name {\\n    font-weight: bold;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/person/person.component.css\n// module id = ./src/app/components/person/person.component.css\n// module chunks = main","module.exports = \"<div class=\\\"cast\\\">\\n    <div class=\\\"cast__image\\\">\\n        <img src=\\\"https://image.tmdb.org/t/p/w500{{cast.profile_path}}\\\">\\n    </div>\\n    <div class=\\\"cast__info\\\">\\n        <span class=\\\"cast__name\\\">{{ cast.name }}</span>\\n        <span *ngIf=\\\"cast.character\\\">{{ cast.character }}</span>\\n        <span *ngIf=\\\"cast.job\\\">{{cast.job}}</span>\\n    </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/person/person.component.html\n// module id = ./src/app/components/person/person.component.html\n// module chunks = main","import { Component, OnInit, Input } from '@angular/core';\nimport { Cast } from '../../models/cast';\n\n@Component({\n  selector: 'person',\n  templateUrl: './person.component.html',\n  styleUrls: ['./person.component.css']\n})\nexport class PersonComponent implements OnInit {\n  @Input() cast: Cast;\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/person/person.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/login/login.component.css\n// module id = ./src/app/login/login.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row\\\">\\n    <form class=\\\"col s12\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"input-field col s12\\\">\\n                <input id=\\\"username\\\" type=\\\"text\\\" class=\\\"validate\\\">\\n                <label for=\\\"username\\\">Username</label>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"input-field col s12\\\">\\n                <input id=\\\"password\\\" type=\\\"password\\\" class=\\\"validate\\\">\\n                <label for=\\\"password\\\">Password</label>\\n            </div>\\n        </div>\\n        <a class=\\\"waves-effect waves-light btn\\\">Login</a>\\n    </form>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/login/login.component.html\n// module id = ./src/app/login/login.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/login/login.component.ts","export class Cast {\n    cast_id: number;\n    character: string;\n    credit_id: string;\n    id: number;\n    name: string;\n    order: number;\n    profile_path: string;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/cast.ts","export class Movie {\n    id: number;\n    title: string;\n    poster_path: string;\n    adult: boolean;\n    overview: string;\n    release_date: string;\n    genre_ids: Array<number>;\n    original_title: string;\n    original_language: string;\n    backdrop_path: string;\n    popularity: number;\n    vote_count: number;\n    video: boolean;\n    vote_average: number;\n    budget: number;\n    belongs_to_collection: null;\n    homepage: string;\n    imdb_id: string;\n    production_companies: Array<{name: string, id: number}>;\n    production_countries: Array<any>;\n    revenue: number;\n    runtime: number;\n    spoken_languages: Array<any>;\n    status: string;\n    tagline: string;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/movie.ts","import { Movie } from './movie'\n\nexport class Movies {\n    page: number;\n    results: Array<Movie>;\n    dates: {\n        maximum: string,\n        minimum: string\n    };\n    total_pages: number;\n    total_results: number;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/movies.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/home/home.component.css\n// module id = ./src/app/pages/home/home.component.css\n// module chunks = main","module.exports = \"<h2 class=\\\"title\\\">Movies</h2>\\n<movie-list [movies]=movies [type]=type [list]=list [totalPages]=totalPages [currentPage]=currentPage></movie-list>\\n\\n<h2 class=\\\"title\\\">Tvs</h2>\\n<movie-list [movies]=tvs [type]=type [list]=list [totalPages]=totalPages [currentPage]=currentPage></movie-list>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/home/home.component.html\n// module id = ./src/app/pages/home/home.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\nimport { Movies } from '../../models/movies';\nimport { MovieService } from '../../services/movie.service';\nimport { TvService } from '../../services/tv.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  movies: Movies;\n  tvs: Movies;\n\n  constructor(\n    private movieService: MovieService,\n    private tvService: TvService\n  ) { }\n\n  ngOnInit() {\n    this.movieService.getMovies('now_playing', 1).then(movies => {\n      const list = movies.results.slice(0, 6);\n      movies.results = list;\n      this.movies = movies;\n    });\n    \n    this.tvService.getTvs('airing_today', 1).then(tvs => {\n      const list = tvs.results.slice(0, 6);\n      tvs.results = list;\n      this.tvs = tvs;\n    });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/home/home.component.ts","module.exports = \"img {\\n    width: 100%;\\n}\\n\\n#movie__header {\\n    color: #ffffff;\\n    position: relative;\\n}\\n\\n.backdrop-poster {\\n    position: relative;\\n    -webkit-box-shadow: 0px -66px 5px 5px #000 inset;\\n            box-shadow: 0px -66px 5px 5px #000 inset;\\n}\\n\\n.basic-info {\\n    position: absolute;\\n    bottom: 0;\\n    left: 0;\\n    background-color: rgba(0, 0, 0, 0.5);\\n    padding: 10px;\\n}\\n\\n.bg-black {\\n    background: #06131a;\\n    color: #ffffff;\\n}\\n\\n.data {\\n    margin-bottom: 50px;\\n}\\n\\n.label {\\n    color: #116f8c;\\n}\\n\\n.genre {\\n    display: inline-block;\\n    background: #ffffff;\\n    color: #000000;\\n    padding: 5px;\\n    border-radius: 5px;\\n    margin: 0 5px 5px 0;\\n    font-size: 11px;\\n}\\n\\n.card-content {\\n    padding: 10px;\\n}\\n\\n#casts .name {\\n    font-weight: bold;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/movie/movie.component.css\n// module id = ./src/app/pages/movie/movie.component.css\n// module chunks = main","module.exports = \"<div id=\\\"movie\\\" *ngIf=\\\"movie\\\">\\n    <div id=\\\"movie__header\\\">\\n        <div class=\\\"backdrop-poster\\\">\\n            <img src=\\\"https://image.tmdb.org/t/p/w1400_and_h450_bestv2/{{movie.backdrop_path}}\\\" />\\n            <div class=\\\"basic-info\\\">\\n                <h5 class=\\\"movie-title\\\">{{ movie.title }}</h5>\\n                <span class=\\\"release-date\\\">{{movie.release_date.substr(0, 4)}}</span>\\n                <span class=\\\"rating\\\">{{movie.vote_average}}</span>\\n            </div>\\n        </div>\\n        <div class=\\\"info columns section\\\">\\n            <div class=\\\"bg-black columns column s6\\\">\\n                <div class=\\\"column is-4\\\">\\n                    <img src=\\\"https://image.tmdb.org/t/p/w500{{movie.poster_path}}\\\" />\\n                </div>\\n                <div class=\\\"column is-8\\\">\\n                    <p>{{movie.tagline}}</p>\\n                    <p>{{ movie.overview }}</p>\\n                    <div class=\\\"genres\\\">\\n                        <span class=\\\"label\\\">Genres: </span>\\n                        <span *ngFor=\\\"let genre of movie.genres\\\" class=\\\"genre\\\">{{genre.name}}</span>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"column s6\\\" *ngIf=\\\"movieVideo\\\">\\n                <div id=\\\"videos\\\" *ngIf=\\\"movieVideo.results.length != 0\\\">\\n                    <iframe id=\\\"ytplayer\\\" type=\\\"text/html\\\" width=\\\"100%\\\" height=\\\"315\\\"\\n                        [src]=\\\"getYoutubeEmbed(movieVideo.results[0].key)\\\"\\n                        frameborder=\\\"0\\\">\\n                    </iframe>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"columns\\\">\\n        <div class=\\\"bg-black column is-2\\\">\\n            <h5>Movie Data</h5>\\n            <div class=\\\"data\\\">\\n                <h6 class=\\\"label\\\">Status:</h6>\\n                <p>{{movie.status}}</p>\\n            </div>\\n            <div class=\\\"data\\\">\\n                <h6 class=\\\"label\\\">Release Information:</h6>\\n                <p>{{movie.release_date}}</p>\\n            </div>\\n            <div class=\\\"data\\\">\\n                <h6 class=\\\"label\\\">Original Language:</h6>\\n                <p>{{movie.original_language}}</p>\\n            </div>\\n            <div class=\\\"data\\\">\\n                <h6 class=\\\"label\\\">Runtime:</h6>\\n                <p>{{movie.runtime}}</p>\\n            </div>\\n            <div class=\\\"data\\\">\\n                <h6 class=\\\"label\\\">Revenue:</h6>\\n                <p>{{movie.revenue}}</p>\\n            </div>\\n            <div class=\\\"data\\\">\\n                <h6 class=\\\"label\\\">Homepage:</h6>\\n                <p><a href=\\\"{{movie.homepage}}\\\" target=\\\"_blank\\\">{{movie.homepage}}</a></p>\\n            </div>\\n            <div class=\\\"data\\\">\\n                <h6 class=\\\"label\\\">Production Companies:</h6>\\n                <p *ngFor=\\\"let company of movie.production_companies\\\">{{company.name}}</p>\\n            </div>\\n        </div>\\n        <div class=\\\"column is-10\\\">\\n            <div class=\\\"\\\" *ngIf=\\\"!section\\\">\\n                <div id=\\\"casts\\\" *ngIf=\\\"movieCredits\\\">\\n                    <div class=\\\"columns\\\">\\n                        <h5 class=\\\"left\\\">Feature Casts</h5>\\n                        <a class=\\\"right\\\" [routerLink]=\\\"['/movie', movie.id, 'casts']\\\">View full casts</a>\\n                    </div>\\n                    <div class=\\\"columns\\\">\\n                        <person class=\\\"column 6-mobile is-3-tablet is-2-desktop is-2-widescreen is-2-fullhd\\\" *ngFor=\\\"let cast of movieCredits.cast.slice(0, 6)\\\" [cast]=cast></person>\\n                    </div>\\n                </div>\\n                <div id=\\\"crews\\\" *ngIf=\\\"movieCredits\\\">\\n                    <div class=\\\"columns\\\">\\n                        <h5 class=\\\"left\\\">Feature Crews</h5>\\n                        <a class=\\\"right\\\" [routerLink]=\\\"['/movie', movie.id, 'casts']\\\">View full crews</a>\\n                    </div>\\n                    <div class=\\\"columns\\\">\\n                        <person class=\\\"column 6-mobile is-3-tablet is-2-desktop is-2-widescreen is-2-fullhd\\\" *ngFor=\\\"let cast of movieCredits.crew.slice(0, 6)\\\" [cast]=cast></person>\\n                    </div>\\n                </div>\\n                <div id=\\\"similar-movies\\\" *ngIf=\\\"similarMovies\\\">\\n                    <div class=\\\"columns\\\">\\n                        <h5 class=\\\"left\\\">Similar Movies</h5>\\n                        <a class=\\\"right\\\" [routerLink]=\\\"['/movie', movie.id, 'similar']\\\">View All Similar Movies</a>\\n                    </div>\\n                    <div class=\\\"columns\\\">\\n                        <movie-list type=\\\"movie\\\" list=\\\"movie\\\" [movies]=(similarMovies)></movie-list>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"\\\">\\n        <ul class=\\\"tabs\\\">\\n            <li class=\\\"tab col s3\\\"><a (click)=\\\"changeSection('reviews')\\\" [routerLink]=\\\"['/movie', movie.id, 'reviews']\\\">Reviews</a></li>\\n            <li class=\\\"tab col s3\\\"><a (click)=\\\"changeSection('videos')\\\" [routerLink]=\\\"['/movie', movie.id, 'videos']\\\">Videos</a></li>\\n            <li class=\\\"tab col s3\\\"><a (click)=\\\"changeSection('images')\\\" [routerLink]=\\\"['/movie', movie.id, 'images']\\\">Images</a></li>\\n            <li class=\\\"tab col s3\\\"><a (click)=\\\"changeSection('casts')\\\" [routerLink]=\\\"['/movie', movie.id, 'casts']\\\">Casts</a></li>\\n        </ul>\\n    </div>\\n    <div class=\\\"container\\\" *ngIf=\\\"section == 'reviews'\\\">\\n        <div id=\\\"reviews\\\" *ngIf=\\\"movieReviews\\\">\\n            <h3>Reviews</h3>\\n            <div class=\\\"row card\\\" *ngFor=\\\"let review of movieReviews.results\\\">\\n                <div class=\\\"col s2\\\">\\n                    <p>{{ review.author }}</p>\\n                </div>\\n                <div class=\\\"col s10\\\">\\n                    <p>{{ review.content }}</p>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"container\\\" *ngIf=\\\"section == 'casts'\\\">\\n        <div class=\\\"row\\\" *ngIf=\\\"movieCredits\\\">\\n            <div class=\\\"col s6\\\">\\n                <div class=\\\"row\\\" *ngFor=\\\"let cast of movieCredits.cast\\\">\\n                    <div class=\\\"col s4\\\">\\n                        <img *ngIf=\\\"cast.profile_path\\\" src=\\\"https://image.tmdb.org/t/p/w500{{cast.profile_path}}\\\">\\n                    </div>\\n                    <div class=\\\"col s8\\\">\\n                        <p>{{ cast.name }}</p>\\n                        <p>{{ cast.character }}</p>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"col s6\\\">\\n                <div class=\\\"row\\\" *ngFor=\\\"let crew of movieCredits.crew\\\">\\n                    <div class=\\\"col s4\\\">\\n                        <img *ngIf=\\\"crew.profile_path\\\" src=\\\"https://image.tmdb.org/t/p/w500{{crew.profile_path}}\\\">\\n                    </div>\\n                    <div class=\\\"col s8\\\">\\n                        <p>{{ crew.name }}</p>\\n                        <p>{{ crew.job }}</p>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"container\\\" *ngIf=\\\"section == 'images'\\\">\\n        <div id=\\\"images\\\" *ngIf=\\\"movieImages\\\">\\n            <h3>Posters</h3>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col l2\\\" *ngFor=\\\"let poster of movieImages.posters\\\">\\n                    <img src=\\\"https://image.tmdb.org/t/p/w500{{poster.file_path}}\\\" />\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col l12\\\" *ngFor=\\\"let backdrop of movieImages.backdrops\\\">\\n                    <img src=\\\"https://image.tmdb.org/t/p/w500{{backdrop.file_path}}\\\" />\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/movie/movie.component.html\n// module id = ./src/app/pages/movie/movie.component.html\n// module chunks = main","import { Component, Input, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params }   from '@angular/router';\nimport { Location }                 from '@angular/common';\nimport { Title, DomSanitizer } from '@angular/platform-browser';\n\n//Import the switchMap operator to use later with the route parameters Observable.\nimport 'rxjs/add/operator/switchMap';\n\nimport { Movie } from '../../models/movie';\nimport { Movies } from '../../models/movies';\nimport { MovieCredits } from '../../models/movieCredits';\nimport { MovieImage } from '../../models/movieImage';\nimport { MovieVideo } from '../../models/movieVideo';\nimport { MovieReviews } from '../../models/movieReviews';\nimport { MovieService } from '../../services/movie.service';\n\n@Component({\n  selector: 'movie',\n  templateUrl: './movie.component.html',\n  styleUrls: ['./movie.component.css']\n})\nexport class MovieComponent implements OnInit {\n  movie: Movie;\n  movieCredits: MovieCredits;\n  movieImages: MovieImage;\n  movieVideo: MovieVideo;\n  movieReviews: MovieReviews;\n  section: String;\n  similarMovies: Movies;\n\n  constructor(\n    private movieService: MovieService,\n    private route: ActivatedRoute,\n    private location: Location,\n    private titleService: Title,\n    private sanitizier: DomSanitizer\n  ) { }\n\n  ngOnInit() {\n    if (typeof this.route.snapshot.params['section'] != 'undefined') {\n      this.section = this.route.snapshot.params['section'];\n    }\n    this.route.params.subscribe(params => {\n      //scroll page to top\n      window.scrollTo(0, 0);\n      \n      this.movieService.getMovieDetail(+params['id'])\n      .then(movie => {\n        this.movie = movie;\n        this.titleService.setTitle(movie.title);\n      });\n      \n      this.movieService.getMovieImages(+params['id'])\n      .then(movieImages => this.movieImages = movieImages);\n      \n      this.movieService.getMovieCredits(+params['id'])\n      .then(movieCredits => this.movieCredits = movieCredits);\n      \n      this.movieService.getMovieVideos(+params['id'])\n      .then(movieVideo => this.movieVideo = movieVideo);\n      \n      this.movieService.getMovieReviews(+params['id'])\n      .then(movieReviews => {\n        this.movieReviews = movieReviews;\n      });\n      \n      this.movieService.getSimilarMovies(+params['id'])\n      .then(similarMovies => {\n        this.similarMovies = similarMovies;\n      });\n    });\n  }\n\n  changeSection(section): void {\n    this.section = section;\n  }\n  \n  getYoutubeEmbed(key) {\n    return this.sanitizier.bypassSecurityTrustResourceUrl('https://www.youtube.com/embed/' + key + '?autoplay=0');\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/movie/movie.component.ts","module.exports = \".tab {\\n    margin: 20px auto;\\n    text-align: center;\\n}\\n.tab__link {\\n    padding: 10px;\\n    display: inline-block;\\n    margin: 0 10px;\\n    color: #fcb208;\\n    -webkit-transition: all 0.2s ease-out;\\n    transition: all 0.2s ease-out;\\n}\\n.tab__link.is-active,\\n.tab__link:hover {\\n    color: #ffffff;\\n    background-color: #fcb209;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/movies/movies.component.css\n// module id = ./src/app/pages/movies/movies.component.css\n// module chunks = main","module.exports = \"<div class=\\\"tab\\\">\\n    <a class=\\\"tab__link\\\" [class.is-active]=\\\"selectedLink == link\\\" *ngFor=\\\"let link of links\\\" [routerLink]=\\\"['/movies', link]\\\" (click)=\\\"selectedLink=link\\\">{{formateTitle(link)}}</a>\\n</div>\\n\\n<movie-list [movies]=movies [type]=type [list]=list [totalPages]=totalPages [currentPage]=currentPage></movie-list>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/movies/movies.component.html\n// module id = ./src/app/pages/movies/movies.component.html\n// module chunks = main","import { Title } from '@angular/platform-browser';\nimport { ActivatedRoute, Params }   from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\n\nimport { Movie } from '../../models/movie';\nimport { Movies } from '../../models/movies';\nimport { MovieService } from '../../services/movie.service';\n\n@Component({\n  selector: 'movies',\n  templateUrl: './movies.component.html',\n  styleUrls: ['./movies.component.css']\n})\nexport class MoviesComponent implements OnInit {\n\n  selectedLink: String;\n  links: Array<String>;\n  movies: Movies;\n  selectedMovie: Movie;\n  list: String;\n  type: string;\n  currentPage: Number;\n  totalPages: Array<Number>;\n  \n  constructor(\n    private titleService: Title,\n    private movieService: MovieService,\n    private route: ActivatedRoute,\n  ) {}\n  \n  ngOnInit(): void {\n    this.list = 'movie';\n    this.links = [\n      'now_playing',\n      'popular',\n      'top_rated',\n      'upcoming'\n    ];\n    this.selectedLink = 'now_playing';\n\n    this.route.params\n    // (+) converts string 'id' to a number\n    .switchMap((params: Params) => this.movieService.getMovies(params['type'], params['page']))\n    .subscribe((movies: Movies) => {\n      this.type = this.route.snapshot.params['type'];\n      this.selectedLink = this.route.snapshot.params['type'];\n      this.movies = movies;\n      this.currentPage = movies.page;\n      this.totalPages = Array(movies.total_pages).fill(1).map((x,i)=>i)\n      // set Page title\n      var title = this.formateTitle(this.route.snapshot.params['type']);\n      this.titleService.setTitle(title);\n    });\n  }\n  \n  onSelect(movie: Movie): void {\n    this.selectedMovie = movie;\n  }\n  \n  //need to find out string vs String\n  formateTitle(title: string): string {\n    // format 'now_playing' to 'Now Playing'\n    const result = title.split('_').map(function(word) {\n      //make word to Capitalize\n      return word.charAt(0).toUpperCase() + word.slice(1);\n    }).join(' ');\n    return result;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/movies/movies.component.ts","module.exports = \".news {\\n    color: #fcb208;\\n    -webkit-transition: all 0.3s ease;\\n    transition: all 0.3s ease;\\n    border: 1px solid transparent;\\n}\\n.news:hover {\\n    color: #fcb208;\\n    border: 1px solid #fcb208;\\n}\\n.news__content {\\n    padding: 20px;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/news/news.component.css\n// module id = ./src/app/pages/news/news.component.css\n// module chunks = main","module.exports = \"<div class=\\\"columns is-multiline\\\">\\n    <a class=\\\"column is-12-mobile is-4-tablet is-3-desktop is-3-widescreen is-3-fullhd\\\" *ngFor=\\\"let item of news\\\" href=\\\"{{item.link}}\\\" target=\\\"_blank\\\">\\n        <div class=\\\"news\\\">\\n            <figure class=\\\"image\\\">\\n                <img src=\\\"{{item.featured_image.source}}\\\" alt=\\\"Placeholder image\\\">\\n            </figure>\\n            <div class=\\\"news__content\\\">\\n                <p [innerHTML]=item.title></p>\\n            </div>\\n        </div>\\n    </a>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/news/news.component.html\n// module id = ./src/app/pages/news/news.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Title, DomSanitizer } from '@angular/platform-browser';\n\nimport { News } from '../../models/news';\nimport { NewsService } from '../../services/news.service';\n\n@Component({\n  selector: 'news',\n  templateUrl: './news.component.html',\n  styleUrls: ['./news.component.css']\n})\nexport class NewsComponent implements OnInit {\n  \n  news: Array<News>;\n\n  constructor(\n    private newsService: NewsService,\n    private titleService: Title\n  ) { }\n\n  ngOnInit() {\n    this.newsService.getNewsFromRottentomatoes()\n      .then(news => {\n        this.news = news;\n        this.titleService.setTitle('Movie Paradise - News');\n      });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/news/news.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/persons/persons.component.css\n// module id = ./src/app/pages/persons/persons.component.css\n// module chunks = main","module.exports = \"<div class=\\\"tabs is-centered\\\">\\n  <ul>\\n      <li class=\\\"tab col s3\\\" *ngFor=\\\"let link of links\\\"><a [class.is-active]=\\\"selectedLink == link\\\" [routerLink]=\\\"['/persons', link]\\\" (click)=\\\"selectedLink=link\\\">{{link}}</a></li>\\n  </ul>\\n</div>\\n<div class=\\\"columns is-mobile is-multiline\\\" *ngIf=\\\"persons\\\">\\n  <a *ngFor=\\\"let p of persons.results\\\" class=\\\"column is-6-mobile is-3-tablet is-2-desktop is-2-widescreen\\\">\\n    <figure class=\\\"image\\\">\\n      <img src=\\\"https://image.tmdb.org/t/p/w500{{p.profile_path}}\\\" alt=\\\"{{ p.name }}\\\" />\\n    </figure>\\n  </a>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/persons/persons.component.html\n// module id = ./src/app/pages/persons/persons.component.html\n// module chunks = main","import { Title } from '@angular/platform-browser';\nimport { ActivatedRoute, Params }   from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\n\nimport { Person } from '../../models/person/person';\nimport { Persons } from '../../models/person/persons';\nimport { PersonService } from '../../services/person.service';\n\n@Component({\n  selector: 'app-persons',\n  templateUrl: './persons.component.html',\n  styleUrls: ['./persons.component.css']\n})\nexport class PersonsComponent implements OnInit {\n\n  selectedLink: String;\n  links: Array<String>;\n  persons: Persons;\n  selectedPerson: Person;\n\n  constructor( \n    private titleService: Title,\n    private personService: PersonService,\n    private route: ActivatedRoute,) { }\n\n  ngOnInit() :void{\n    this.links=[\n      'popular'\n    ];\n    this.selectedLink = 'popular';\n\n    this.route.params\n    .switchMap((params: Params) => this.personService.getPopular(params['type']))\n    .subscribe((persons: Persons) =>{\n      this.persons = persons;\n    })\n  \n  }\n\n\n  \n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/persons/persons.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/tvs/tvs.component.css\n// module id = ./src/app/pages/tvs/tvs.component.css\n// module chunks = main","module.exports = \"<div class=\\\"tabs is-centered\\\">\\n    <ul>\\n        <li class=\\\"tab col s3\\\" [class.is-active]=\\\"selectedLink == link\\\" *ngFor=\\\"let link of links\\\"><a [routerLink]=\\\"['/tvs', link]\\\" (click)=\\\"selectedLink=link\\\">{{formateTitle(link)}}</a></li>\\n    </ul>\\n</div>\\n\\n<movie-list [movies]=tvs [type]=type [list]=list [totalPages]=totalPages [currentPage]=currentPage></movie-list>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/tvs/tvs.component.html\n// module id = ./src/app/pages/tvs/tvs.component.html\n// module chunks = main","import { Title } from '@angular/platform-browser';\nimport { ActivatedRoute, Params }   from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\n\nimport { Movie } from '../../models/movie';\nimport { Movies } from '../../models/movies';\nimport { TvService } from '../../services/tv.service';\n\n@Component({\n  selector: 'tvs',\n  templateUrl: './tvs.component.html',\n  styleUrls: ['./tvs.component.css']\n})\nexport class TvsComponent implements OnInit {\n  \n  tvs: Movies;\n  selectedLink: String;\n  links: Array<String>;\n  currentPage: Number;\n  totalPages: Array<Number>;\n  list: String;\n  type: string;\n  \n  constructor(\n    private titleService: Title,\n    private tvService: TvService,\n    private route: ActivatedRoute,\n  ) {}\n  \n  ngOnInit() {\n    this.list = 'tv';\n    this.links = [\n      'airing_today',\n      'on_the_air',\n      'popular',\n      'top_rated'\n    ];\n    this.selectedLink = 'airing_today';\n\n    this.route.params\n    // (+) converts string 'id' to a number\n    .switchMap((params: Params) => this.tvService.getTvs(params['type'], params['page']))\n    .subscribe((tvs: Movies) => {\n      this.type = this.route.snapshot.params['type'];\n      this.selectedLink = this.route.snapshot.params['type'];\n      this.tvs = tvs;\n      this.currentPage = tvs.page;\n      this.totalPages = Array(tvs.total_pages).fill(1).map((x,i)=>i)\n      // set Page title\n      var title = this.formateTitle(this.route.snapshot.params['type']);\n      this.titleService.setTitle(title);\n    });\n  }\n  \n  //need to find out string vs String\n  formateTitle(title: string): string {\n    // format 'now_playing' to 'Now Playing'\n    const result = title.split('_').map(function(word) {\n      //make word to Capitalize\n      return word.charAt(0).toUpperCase() + word.slice(1);\n    }).join(' ');\n    return result;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/tvs/tvs.component.ts","import { Injectable } from '@angular/core';\nimport { Headers, Http } from '@angular/http';\n\nimport 'rxjs/add/operator/toPromise';\n\nimport { Movies } from '../models/movies';\nimport { Movie } from '../models/movie';\nimport { MovieCredits } from '../models/movieCredits';\nimport { MovieImage } from '../models/movieImage';\nimport { MovieVideo } from '../models/movieVideo';\nimport { MovieReviews } from '../models/movieReviews';\n\n@Injectable()\nexport class MovieService {\n    \n    private baseUrl = 'https://api.themoviedb.org/3/movie/';\n    private apiKey = '?api_key=8109b23cc9abaf02cf3c699ec62ccc19';\n    private headers = new Headers({'Content-Type': 'application/json'});\n\n    constructor(private http: Http) { }\n    \n    getMovies(type: String, page: number): Promise<Movies> {\n        const moviesUrl = this.baseUrl + type + this.apiKey + '&page=' + page;\n        const movies = this.http.get(moviesUrl)\n                        .toPromise()\n                        .then(response => response.json() as Movies)\n                        .catch(this.handleError);\n        return movies;\n    }\n    \n    getMovieDetail(id: number): Promise<Movie> {\n        const movieDetail = this.baseUrl + id + this.apiKey;\n        const movie = this.http.get(movieDetail)\n                        .toPromise()\n                        .then(response => response.json() as Movie)\n                        .catch(this.handleError);\n        return movie;\n    }\n    \n    getMovieImages(id: number): Promise<MovieImage> {\n        const movieCredits = this.baseUrl + id + '/images' + this.apiKey;\n        return this.http.get(movieCredits)\n                    .toPromise()\n                    .then(res => res.json() as MovieImage)\n                    .catch(this.handleError);\n    }\n    \n    getMovieCredits(id: number): Promise<MovieCredits> {\n        const movieCredits = this.baseUrl + id + '/credits' + this.apiKey;\n        return this.http.get(movieCredits)\n                    .toPromise()\n                    .then(res => res.json() as MovieCredits)\n                    .catch(this.handleError);\n    }\n    \n    getMovieVideos(id: number): Promise<MovieVideo> {\n        const movieVideo = this.baseUrl + id + '/videos' + this.apiKey;\n        return this.http.get(movieVideo)\n                    .toPromise()\n                    .then(res => res.json() as MovieVideo)\n                    .catch(this.handleError);\n    }\n    \n    getMovieReviews(id: number): Promise<MovieReviews> {\n        const movieReviews = this.baseUrl + id +'/reviews' + this.apiKey;\n        return this.http.get(movieReviews)\n                    .toPromise()\n                    .then(res => res.json() as MovieReviews)\n                    .catch(this.handleError);\n    }\n    \n    getSimilarMovies(id: number): Promise<Movies> {\n        const similarMovies = this.baseUrl + id + '/similar' + this.apiKey;\n        return this.http.get(similarMovies)\n                    .toPromise()\n                    .then(res => res.json() as Movies)\n                    .catch(this.handleError);\n    }\n    \n    private handleError(error: any): Promise<any> {\n        console.error('An error occurred', error); // for demo purposes only\n        return Promise.reject(error.message || error);\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/movie.service.ts","import { Injectable } from '@angular/core';\nimport { Headers, Http } from '@angular/http';\n\nimport { News } from '../models/news';\n\nimport 'rxjs/add/operator/toPromise';\n\n@Injectable()\nexport class NewsService {\n    \n    private headers = new Headers({'Content-Type': 'application/json'});\n\n    constructor(private http: Http) {\n    }\n    \n    getNewsFromRottentomatoes(): Promise<News[]> {\n        const url = 'https://editorial.rottentomatoes.com/wp-json/articles/';\n        const news = this.http.get(url)\n                        .toPromise()\n                        .then(response => response.json() as News[])\n                        .catch(this.handleError);\n        return news;\n    }\n    \n    private handleError(error: any): Promise<any> {\n        console.error('An error occurred', error); // for demo purposes only\n        return Promise.reject(error.message || error);\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/news.service.ts","import { Injectable } from '@angular/core';\nimport { Headers, Http } from '@angular/http';\n\nimport 'rxjs/add/operator/toPromise';\n\nimport { Persons } from '../models/person/persons';\nimport { Person } from '../models/person/person';\n\n@Injectable()\n\nexport class PersonService{\n    private baseUrl = 'https://api.themoviedb.org/3/person/';\n    private apiKey = '?api_key=8109b23cc9abaf02cf3c699ec62ccc19';\n    private headers = new Headers({'Content-Type': 'application/json'});\n\n\n    constructor(private http: Http){}\n\n    getPopular(type: String): Promise<Persons>{\n        const personsUrl = this.baseUrl + type + this.apiKey + '&page=1';\n        const persons = this.http.get(personsUrl)\n        .toPromise()\n        .then(response => response.json() as Persons)\n        .catch(this.handleError);\n        return persons;\n    }\n\n    private handleError(error: any): Promise<any> {\n        console.error('An error occurred', error); // for demo purposes only\n        return Promise.reject(error.message || error);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/person.service.ts","import { Injectable } from '@angular/core';\nimport { Headers, Http } from '@angular/http';\nimport { Token } from '../models/token';\nimport { Session } from '../models/session';\n\nimport 'rxjs/add/operator/toPromise';\n\n@Injectable()\nexport class SessionService {\n    private baseUrl = 'https://api.themoviedb.org/3/authentication/';\n    private apiKey = '?api_key=8109b23cc9abaf02cf3c699ec62ccc19';\n    \n    constructor(private http: Http) { }\n    \n    getToken(username: string, password: string): Promise<Session> {\n        const newTokenUrl = this.baseUrl + 'token/new' + this.apiKey;\n        const newToken = this.http.get(newTokenUrl)\n                        .toPromise()\n                        .then(response => this.validateLogin(username, password, response.json()))\n                        .catch(this.handleError);\n        return newToken;\n    }\n    \n    validateLogin(username: string, password: string, token: Token): Promise<Token> {\n        const data = '&username=' + username + '&password=' + password + '&request_token=' + token.request_token;\n        const validateUrl = this.baseUrl + 'token/validate_with_login' + this.apiKey + data;\n        const validateToken = this.http.get(validateUrl)\n                                .toPromise()\n                                .then(response => this.getSession(response.json().request_token))\n                                .catch(this.handleError);\n        return validateToken;\n    }\n    \n    getSession(request_token: string): Promise<Token> {\n        const sessionUrl = this.baseUrl + 'session/new' + this.apiKey + '&request_token=' + request_token;\n        const session = this.http.get(sessionUrl)\n                                .toPromise()\n                                .then(response => response.json() as Token)\n                                .catch(this.handleError);\n        return session;\n    }\n    \n    private handleError(error: any): Promise<any> {\n        console.error('An error occurred', error); // for demo purposes only\n        return Promise.reject(error.message || error);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/session.service.ts","import { Injectable } from '@angular/core';\nimport { Headers, Http } from '@angular/http';\n\nimport 'rxjs/add/operator/toPromise';\n\nimport { Movies } from '../models/movies';\nimport { Movie } from '../models/movie';\n\n@Injectable()\nexport class TvService {\n    \n    private baseUrl = 'https://api.themoviedb.org/3/tv/';\n    private apiKey = '?api_key=8109b23cc9abaf02cf3c699ec62ccc19';\n    private headers = new Headers({'Content-Type': 'application/json'});\n\n    constructor(private http: Http) { }\n  \n    getTvs(type: String, page: number): Promise<Movies> {\n        const url = this.baseUrl + type + this.apiKey + '&page=' + page;\n        const tvs = this.http.get(url)\n                        .toPromise()\n                        .then(response => response.json() as Movies)\n                        .catch(this.handleError);\n        return tvs;\n    }\n    \n    private handleError(error: any): Promise<any> {\n        console.error('An error occurred', error); // for demo purposes only\n        return Promise.reject(error.message || error);\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/tv.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}