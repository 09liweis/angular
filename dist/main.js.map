{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/movie-list/movie-list.component.html","webpack:///./src/app/components/movie-list/movie-list.component.scss","webpack:///./src/app/components/movie-list/movie-list.component.ts","webpack:///./src/app/components/movie/movie.component.html","webpack:///./src/app/components/movie/movie.component.scss","webpack:///./src/app/components/movie/movie.component.ts","webpack:///./src/app/components/person-list/person-list.component.html","webpack:///./src/app/components/person-list/person-list.component.scss","webpack:///./src/app/components/person-list/person-list.component.ts","webpack:///./src/app/components/person/person.component.css","webpack:///./src/app/components/person/person.component.html","webpack:///./src/app/components/person/person.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/models/cast.ts","webpack:///./src/app/models/movie.ts","webpack:///./src/app/models/movies.ts","webpack:///./src/app/models/person/persons.ts","webpack:///./src/app/pages/home/home.component.css","webpack:///./src/app/pages/home/home.component.html","webpack:///./src/app/pages/home/home.component.ts","webpack:///./src/app/pages/movie/movie.component.html","webpack:///./src/app/pages/movie/movie.component.scss","webpack:///./src/app/pages/movie/movie.component.ts","webpack:///./src/app/pages/movies/movies.component.css","webpack:///./src/app/pages/movies/movies.component.html","webpack:///./src/app/pages/movies/movies.component.ts","webpack:///./src/app/pages/news/news.component.html","webpack:///./src/app/pages/news/news.component.scss","webpack:///./src/app/pages/news/news.component.ts","webpack:///./src/app/pages/persons/persons.component.html","webpack:///./src/app/pages/persons/persons.component.scss","webpack:///./src/app/pages/persons/persons.component.ts","webpack:///./src/app/pages/tv/tv.component.css","webpack:///./src/app/pages/tv/tv.component.html","webpack:///./src/app/pages/tv/tv.component.ts","webpack:///./src/app/pages/tvs/tvs.component.css","webpack:///./src/app/pages/tvs/tvs.component.html","webpack:///./src/app/pages/tvs/tvs.component.ts","webpack:///./src/app/services/movie.service.ts","webpack:///./src/app/services/news.service.ts","webpack:///./src/app/services/person.service.ts","webpack:///./src/app/services/search.service.ts","webpack:///./src/app/services/session.service.ts","webpack:///./src/app/services/tv.service.ts","webpack:///./src/app/services/utils.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<nav id=\\\"nav\\\" role=\\\"navigation\\\" aria-label=\\\"main navigation\\\">\\n    <div class=\\\"container\\\">\\n        <a id=\\\"logo\\\" routerLink=\\\"/\\\">Movie Paradise</a>\\n        <a class=\\\"nav__link\\\" routerLink=\\\"/movies/now_playing\\\">Movies</a>\\n        <a class=\\\"nav__link\\\" routerLink=\\\"/tvs/airing_today/page/1\\\">Tv Show</a>\\n        <a class=\\\"nav__link\\\" routerLink=\\\"/people/popular\\\">People</a>\\n        <a class=\\\"nav__link\\\" routerLink=\\\"/news\\\">News</a>\\n        <div class=\\\"navbar-item\\\" *ngIf=\\\"sessionId != ''\\\"><a>{{ username }}</a></div>\\n        <div class=\\\"navbar-item\\\" *ngIf=\\\"sessionId != ''\\\"><a (click)=\\\"logout()\\\">Logout</a></div>\\n        <div id=\\\"search\\\">\\n            <input id=\\\"search__input\\\" placeholder=\\\"Search Something\\\" type=\\\"text\\\" (keyup)=\\\"onKey($event)\\\" [(ngModel)]=\\\"search\\\" />\\n            <div id=\\\"search__results\\\" *ngIf=\\\"results\\\" [@searchAnimation]=\\\"results.length\\\">\\n                <a class=\\\"search__result\\\" *ngFor=\\\"let result of results\\\" (click)=\\\"gotoDetail(result)\\\">\\n                    <figure class=\\\"search__result-poster\\\">\\n                        <img src=\\\"https://image.tmdb.org/t/p/w500{{result.poster_path}}\\\" />\\n                        <figcaption>{{result.title ? result.title : result.name}}</figcaption>\\n                    </figure>\\n                </a>\\n            </div>\\n        </div>\\n    </div>\\n</nav>\\n\\n<!--The whole content below can be removed with the new code.-->\\n<!--<div class=\\\"row\\\" *ngIf=\\\"sessionId == ''\\\">-->\\n<!--    <form class=\\\"col s12\\\">-->\\n<!--        <div class=\\\"row\\\">-->\\n<!--            <div class=\\\"input-field col s12\\\">-->\\n<!--                <input id=\\\"username\\\" name=\\\"username\\\" type=\\\"text\\\" class=\\\"validate\\\" [(ngModel)]=\\\"username\\\">-->\\n<!--                <label for=\\\"username\\\">Username</label>-->\\n<!--            </div>-->\\n<!--        </div>-->\\n<!--        <div class=\\\"row\\\">-->\\n<!--            <div class=\\\"input-field col s12\\\">-->\\n<!--                <input id=\\\"password\\\" name=\\\"password\\\" type=\\\"password\\\" class=\\\"validate\\\" [(ngModel)]=\\\"password\\\">-->\\n<!--                <label for=\\\"password\\\">Password</label>-->\\n<!--            </div>-->\\n<!--        </div>-->\\n<!--        <a (click)=\\\"login()\\\" class=\\\"waves-effect waves-light btn\\\">Login</a>-->\\n<!--    </form>-->\\n<!--</div>-->\\n<main id=\\\"mainContainer\\\" class=\\\"container fluid\\\">\\n  <router-outlet></router-outlet>\\n</main>\"","module.exports = \"#nav {\\n  position: fixed;\\n  width: 100%;\\n  top: 0;\\n  background-color: rgba(51, 51, 51, 0.95);\\n  z-index: 11;\\n  padding: 10px 0; }\\n\\n#logo {\\n  display: inline-block;\\n  color: #ffffff;\\n  margin-right: 10px;\\n  font-size: 1.8em; }\\n\\n.nav__link {\\n  display: inline-block;\\n  padding: 10px;\\n  color: #fcb208;\\n  transition: color 0.3s;\\n  position: relative; }\\n\\n.nav__link:before {\\n    position: absolute;\\n    content: '';\\n    width: 0;\\n    height: 1px;\\n    bottom: 0;\\n    left: 0;\\n    background-color: #fcb208;\\n    transition: width 0.4s ease; }\\n\\n.nav__link:hover:before {\\n    width: 100%; }\\n\\n#mainContainer {\\n  margin-top: 125px; }\\n\\n#search {\\n  display: inline-block;\\n  position: relative;\\n  width: 300px; }\\n\\n#search__results {\\n  position: absolute;\\n  top: 55px;\\n  left: 0;\\n  width: 100%; }\\n\\n.search__result {\\n  display: block;\\n  cursor: pointer;\\n  padding: 10px;\\n  transition: all 0.2s ease;\\n  color: #ffffff;\\n  background-color: #232b31; }\\n\\n.search__result:hover {\\n    color: #fcb208; }\\n\\n.search__result-poster img {\\n  display: inline-block;\\n  vertical-align: middle;\\n  width: 20%; }\\n\\n.search__result-poster figcaption {\\n  display: inline-block;\\n  vertical-align: middle; }\\n\\n#search__input {\\n  width: 100%;\\n  padding: 10px; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport { SessionService } from './services/session.service';\nimport { SearchService } from './services/search.service';\nimport { Token } from './models/token';\n\nimport { trigger,style,transition,animate,keyframes,query,stagger } from '@angular/animations';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  animations: [\n    trigger('searchAnimation', [\n      transition('* => *', [\n        query(':enter', style({ opacity: 0 }), {optional: true}),\n        query(':enter', stagger('100ms', [\n          animate('0.3s ease-in', keyframes([\n            style({opacity: 0, transform: 'translateX(-15%)', offset: 0}),\n            style({opacity: .5, transform: 'translateX(15px)',  offset: 0.3}),\n            style({opacity: 1, transform: 'translateX(0)',     offset: 1.0}),\n          ]))]), {optional: true}),\n        query(':leave', stagger('100ms', [\n          animate('0.3s ease-in', keyframes([\n            style({opacity: 1, transform: 'translateX(0)', offset: 0}),\n            style({opacity: .5, transform: 'translateX(15px)',  offset: 0.3}),\n            style({opacity: 0, transform: 'translateX(-15%)',     offset: 1.0}),\n          ]))]), {optional: true})\n      ])\n    ])\n  ]\n})\nexport class AppComponent {\n  title: string = 'Movies Paradise';\n  username: string = 'samliweisen';\n  password: string = 'kanamemadoka2017';\n  token: Token;\n  sessionId: string = '';\n  results: Array<any> = [];\n  search: string = '';\n  \n  constructor(\n    private sessionService: SessionService,\n    private searchService: SearchService,\n    private router: Router\n  ) {}\n  \n  login(): void {\n    this.sessionService.getToken(this.username, this.password).then(res => this.sessionId = res.session_id);\n  }\n  \n  logout(): void {\n    this.sessionId = '';\n  }\n  \n  onKey(event: any) {\n    const search = event.target.value;\n    if (search != '') {\n      this.results = [];\n      this.searchService.getResults(search).then(res => {\n        this.results = res.results;\n      });\n    }\n  }\n  \n  gotoDetail(result: any) {\n    this.results = [];\n    this.search = '';\n    if (result.media_type == 'movie') {\n      this.router.navigate([result.media_type + '/' + result.id]); \n    }\n  }\n}\n","import { BrowserModule, Title } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule }   from '@angular/router';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpModule } from '@angular/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { MoviesComponent } from './pages/movies/movies.component';\nimport { MovieComponent } from './pages/movie/movie.component';\nimport { SingleMovieComponent } from './components/movie/movie.component';\n\nimport { MovieService } from './services/movie.service';\nimport { SessionService } from './services/session.service';\nimport { NewsService } from './services/news.service';\nimport { TvService } from './services/tv.service';\nimport { SearchService } from './services/search.service';\n\nimport { LoginComponent } from './login/login.component';\nimport { PersonComponent } from './components/person/person.component';\nimport { MovieListComponent } from './components/movie-list/movie-list.component';\nimport { PersonsComponent } from './pages/persons/persons.component';\nimport {PersonService} from './services/person.service';\nimport { NewsComponent } from './pages/news/news.component';\nimport { TvsComponent } from './pages/tvs/tvs.component';\nimport { HomeComponent } from './pages/home/home.component';\nimport { TvComponent } from './pages/tv/tv.component';\nimport { UtilsService } from './services/utils.service';\nimport { PersonListComponent } from './components/person-list/person-list.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MoviesComponent,\n    MovieComponent,\n    SingleMovieComponent,\n    LoginComponent,\n    PersonComponent,\n    MovieListComponent,\n    NewsComponent,\n    TvsComponent,\n    PersonsComponent,\n    HomeComponent,\n    TvComponent,\n    PersonListComponent,\n  ],\n  imports: [\n    FormsModule,\n    BrowserAnimationsModule,\n    BrowserModule,\n    HttpModule,\n    RouterModule.forRoot([\n      {\n        path: '',\n        component: HomeComponent\n      },\n      {\n        path: 'login',\n        component: LoginComponent\n      },\n      {\n        path: 'news',\n        component: NewsComponent\n      },\n      {\n        path: 'tvs/:type',\n        component: TvsComponent\n      },\n      {\n        path: 'tvs/:type/page/:page',\n        component: TvsComponent\n      },\n      {\n        path: 'tv/:id',\n        component: TvComponent\n      },\n      {\n        path: 'movies',\n        component: MoviesComponent\n      },\n      {\n        path: 'movies/:type',\n        component: MoviesComponent\n      },\n      {\n        path: 'movies/:type/page/:page',\n        component: MoviesComponent\n      },\n      {\n        path: 'movie/:id',\n        component: MovieComponent\n      },\n      {\n        path: 'movie/:id/:section',\n        component: MovieComponent\n      },\n      {\n        path:'people/:type',\n        component:PersonsComponent\n      }\n      \n    ]),\n  ],\n  providers: [\n    Title,\n    MovieService,\n    PersonService,\n    NewsService,\n    TvService,\n    SessionService,\n    SearchService,\n    UtilsService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<div class=\\\"columns is-mobile is-multiline\\\" [@moviesAnimation]=\\\"movies.results.length\\\" *ngIf=\\\"movies\\\">\\n    <single-movie class=\\\"movie__container column is-6-mobile is-3-tablet is-2-desktop is-2-widescreen is-2-fullhd\\\" *ngFor=\\\"let movie of movies.results\\\" [movie]=movie [list]=list></single-movie>\\n</div>\\n<nav class=\\\"pagination is-centered\\\" role=\\\"navigation\\\" aria-label=\\\"pagination\\\" *ngIf=\\\"totalPages\\\">\\n    <a class=\\\"pagination-previous\\\">Previous</a>\\n    <a class=\\\"pagination-next\\\">Next</a>\\n    <ul class=\\\"pagination-list\\\">\\n        <li *ngFor=\\\"let page of totalPages\\\">\\n            <a [routerLink]=\\\"['/',list + 's', type, 'page', (page+1)]\\\" class=\\\"pagination-link\\\" [class.is-current]=\\\"currentPage == (page+1)\\\"  aria-current=\\\"page\\\">{{page+1}}</a>\\n        </li>\\n    </ul>\\n</nav>\"","module.exports = \".movie__container:nth-last-of-type(-n+2) {\\n  font-size: 1.5em; }\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { trigger,style,transition,animate,keyframes,query,stagger } from '@angular/animations';\n\nimport { Movies } from '../../models/movies';\n\n@Component({\n  selector: 'movie-list',\n  templateUrl: './movie-list.component.html',\n  styleUrls: ['./movie-list.component.scss'],\n  animations: [\n    trigger('moviesAnimation', [\n      transition('* => *', [\n\n        query(':enter', style({ opacity: 0 }), {optional: true}),\n\n        query(':enter', stagger('200ms', [\n          animate('0.5s ease-in', keyframes([\n            style({opacity: 0, transform: 'translateY(-35%)', offset: 0}),\n            style({opacity: .5, transform: 'translateY(35px)',  offset: 0.3}),\n            style({opacity: 1, transform: 'translateY(0)',     offset: 1.0}),\n          ]))]), {optional: true}),\n        \n        query(':leave', stagger('300ms', [\n          animate('1s ease-in', keyframes([\n            style({opacity: 1, transform: 'translateY(0)', offset: 0}),\n            style({opacity: .5, transform: 'translateY(35px)',  offset: 0.3}),\n            style({opacity: 0, transform: 'translateY(-35%)',     offset: 1.0}),\n          ]))]), {optional: true})\n      ])\n    ])\n  ]\n})\nexport class MovieListComponent implements OnInit {\n  @Input() type: string;// current type of movie or tv\n  @Input() list: string;// movie or tv\n  @Input() totalPages: number;\n  @Input() currentPage: number;\n  @Input() movies: Movies;\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<a class=\\\"movie\\\" [routerLink]=\\\"['/', list, movie.id]\\\">\\n    <figure class=\\\"movie__poster\\\">\\n        <img class=\\\"movie__image\\\" [src]=getMoviePoster(movie.poster_path) alt=\\\"{{ movie.title }}\\\" />\\n        <figcaption class=\\\"movie_title\\\">{{movie.title ? movie.title : movie.name}}</figcaption>\\n    </figure>\\n    <span class=\\\"movie__rating\\\">{{movie.vote_average}}</span>\\n</a>\"","module.exports = \".movie {\\n  border-radius: 5px;\\n  position: relative;\\n  display: block;\\n  transition: all 0.4s ease; }\\n\\n.movie__image {\\n  -webkit-transform: scale(1);\\n          transform: scale(1);\\n  transition: -webkit-transform 0.4s ease;\\n  transition: transform 0.4s ease;\\n  transition: transform 0.4s ease, -webkit-transform 0.4s ease;\\n  border-radius: 5px; }\\n\\n.movie__image:hover {\\n    -webkit-transform: rotate3d(1, 2, 1, 15deg);\\n            transform: rotate3d(1, 2, 1, 15deg); }\\n\\n.movie__rating {\\n  border-radius: 5px;\\n  padding: 5px;\\n  background-color: #ffb207;\\n  color: #ffffff;\\n  position: absolute;\\n  top: 12px;\\n  left: 12px; }\\n\\n.movie_title {\\n  color: #cac1c1;\\n  font-size: 1rem; }\\n\"","import { Component, Input, OnInit } from '@angular/core';\nimport { Movie } from '../../models/movie';\nimport { UtilsService } from '../../services/utils.service';\n\n@Component({\n  selector: 'single-movie',\n  templateUrl: './movie.component.html',\n  styleUrls: ['./movie.component.scss']\n})\nexport class SingleMovieComponent implements OnInit {\n  @Input() movie: Movie;\n  @Input() list: String;\n\n  constructor(private utilsService: UtilsService) { }\n\n  ngOnInit() {\n  }\n  getMoviePoster(path: string): string {\n    return this.utilsService.getImagePath(path);\n  }\n\n}\n","module.exports = \"<div class=\\\"columns is-mobile is-multiline\\\" *ngIf=\\\"persons\\\" [@personsAnimation]=\\\"persons.results.length\\\">\\n  <person class=\\\"column is-6-mobile is-3-tablet is-2-desktop is-2-widescreen is-2-fullhd\\\" *ngFor=\\\"let person of persons.results\\\" [person]=person></person>\\n</div>\\n\"","module.exports = \"\"","import { Component, OnInit, Input } from '@angular/core';\nimport { trigger,style,transition,animate,keyframes,query,stagger } from '@angular/animations';\n\nimport { Persons } from '../../models/person/persons';\n\n@Component({\n  selector: 'person-list',\n  templateUrl: './person-list.component.html',\n  styleUrls: ['./person-list.component.scss'],\n  animations: [\n    trigger('personsAnimation', [\n      transition('* => *', [\n        query(':enter', style({opacity: 0}), {optional: true}),\n        query(':enter', stagger('200ms', [\n          animate('0.3s ease', keyframes([\n            style({opacity: 0, transform: 'translateX(20%)', offset: 0}),\n            style({opacity: 0.5, transform: 'translateX(-20px)', offset: 0.5}),\n            style({opacity: 1, transform: 'translateX(0)', offset: 1}),\n          ]))\n        ]), {optional: true})\n      ])\n    ])\n  ]\n})\nexport class PersonListComponent implements OnInit {\n  @Input() persons: Persons;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".cast {\\n    transition: -webkit-transform 0.3s ease;\\n    transition: transform 0.3s ease;\\n    transition: transform 0.3s ease, -webkit-transform 0.3s ease;\\n}\\n.cast:hover {\\n    -webkit-transform: translateY(10px);\\n            transform: translateY(10px);\\n}\\n.cast__image img {\\n    border-radius: 5px;\\n    display: block;\\n    width: 100%;\\n}\\n.cast__info {\\n    background-color: #ffffff;\\n    padding: 10px;\\n    border-bottom-left-radius: 5px;\\n    border-bottom-right-radius: 5px;\\n}\\n.cast__name {\\n    font-weight: bold;\\n    display: block;\\n}\"","module.exports = \"<div class=\\\"cast\\\">\\n    <figure class=\\\"cast__image\\\">\\n        <img [src]=getCastImage(person.profile_path) alt=\\\"{{person.name}}\\\">\\n        <figcaption class=\\\"cast__info\\\">\\n            <span class=\\\"cast__name\\\">{{ person.name }}</span>\\n            <span *ngIf=\\\"person.character\\\">{{ person.character }}</span>\\n            <span *ngIf=\\\"person.job\\\">{{person.job}}</span>\\n        </figcaption>\\n    </figure>\\n</div>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Cast } from '../../models/cast';\nimport {UtilsService} from '../../services/utils.service';\n\n@Component({\n  selector: 'person',\n  templateUrl: './person.component.html',\n  styleUrls: ['./person.component.css']\n})\nexport class PersonComponent implements OnInit {\n  @Input() person: Cast;\n  constructor(private utilsService: UtilsService) { }\n\n  ngOnInit() {\n  }\n  getCastImage(path: string): string {\n    return this.utilsService.getImagePath(path);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n    <form class=\\\"col s12\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"input-field col s12\\\">\\n                <input id=\\\"username\\\" type=\\\"text\\\" class=\\\"validate\\\">\\n                <label for=\\\"username\\\">Username</label>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"input-field col s12\\\">\\n                <input id=\\\"password\\\" type=\\\"password\\\" class=\\\"validate\\\">\\n                <label for=\\\"password\\\">Password</label>\\n            </div>\\n        </div>\\n        <a class=\\\"waves-effect waves-light btn\\\">Login</a>\\n    </form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export class Cast {\n    cast_id: number;\n    character: string;\n    credit_id: string;\n    id: number;\n    name: string;\n    order: number;\n    profile_path: string;\n}\n","export class Movie {\n    id: number;\n    title: string;\n    poster_path: string;\n    adult: boolean;\n    overview: string;\n    release_date: string;\n    genre_ids: Array<number>;\n    original_title: string;\n    original_language: string;\n    backdrop_path: string;\n    popularity: number;\n    vote_count: number;\n    video: boolean;\n    vote_average: number;\n    budget: number;\n    belongs_to_collection: null;\n    homepage: string;\n    imdb_id: string;\n    production_companies: Array<{name: string, id: number}>;\n    production_countries: Array<any>;\n    revenue: number;\n    runtime: number;\n    spoken_languages: Array<any>;\n    status: string;\n    tagline: string;\n}\n","import { Movie } from './movie'\n\nexport class Movies {\n    page: number;\n    results: Array<Movie>;\n    dates: {\n        maximum: string,\n        minimum: string\n    };\n    total_pages: number;\n    total_results: number;\n}\n","import {Person} from './person'\n\nexport class Persons{\n    page: number;\n    total_pages: number;\n    total_results: number;\n    results: Array<Person>;\n}","module.exports = \"\"","module.exports = \"<section class=\\\"home__movies\\\">\\n    <h2 class=\\\"title\\\">Movies</h2>\\n    <movie-list [movies]=movies [type]=type [list]=\\\"'movie'\\\" [totalPages]=totalPages [currentPage]=currentPage></movie-list>\\n</section>\\n\\n<section class=\\\"home__tvs\\\">\\n    <h2 class=\\\"title\\\">Tvs</h2>\\n    <movie-list [movies]=tvs [type]=type [list]=\\\"'tv'\\\" [totalPages]=totalPages [currentPage]=currentPage></movie-list>\\n</section>\"","import { Component, OnInit } from '@angular/core';\n\nimport { Movies } from '../../models/movies';\nimport { MovieService } from '../../services/movie.service';\nimport { TvService } from '../../services/tv.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  movies: Movies;\n  tvs: Movies;\n\n  constructor(\n    private movieService: MovieService,\n    private tvService: TvService\n  ) { }\n\n  ngOnInit() {\n    this.movieService.getMovies('now_playing', 1).then(movies => {\n      const list = movies.results.slice(0, 6);\n      movies.results = list;\n      this.movies = movies;\n    });\n    \n    this.tvService.getTvs('airing_today', 1).then(tvs => {\n      const list = tvs.results.slice(0, 6);\n      tvs.results = list;\n      this.tvs = tvs;\n    });\n  }\n\n}\n","module.exports = \"<div class=\\\"movie__tabs tab\\\" *ngIf=\\\"movie\\\">\\n    <a class=\\\"tab__link\\\" (click)=\\\"changeSection('home')\\\" [routerLink]=\\\"['/movie', movie.id]\\\">Home</a>\\n    <a class=\\\"tab__link\\\" (click)=\\\"changeSection('reviews')\\\" [routerLink]=\\\"['/movie', movie.id, 'reviews']\\\">Reviews</a>\\n    <a class=\\\"tab__link\\\" (click)=\\\"changeSection('videos')\\\" [routerLink]=\\\"['/movie', movie.id, 'videos']\\\">Videos</a>\\n    <a class=\\\"tab__link\\\" (click)=\\\"changeSection('images')\\\" [routerLink]=\\\"['/movie', movie.id, 'images']\\\">Images</a>\\n    <a class=\\\"tab__link\\\" (click)=\\\"changeSection('casts')\\\" [routerLink]=\\\"['/movie', movie.id, 'casts']\\\">Casts</a>\\n</div>\\n<div id=\\\"movie\\\" *ngIf=\\\"movie\\\">\\n    <div class=\\\"movie__backdrop\\\" [style.background-image]=\\\"'url(https://image.tmdb.org/t/p/w1400_and_h450_bestv2/' + movie.backdrop_path + ')'\\\"></div>\\n    <div id=\\\"movie__header\\\" *ngIf=\\\"section == 'home'\\\">\\n        <div class=\\\"movie__info columns\\\">\\n            <figure class=\\\"column is-4\\\">\\n                <img src=\\\"https://image.tmdb.org/t/p/w500{{movie.poster_path}}\\\" />\\n            </figure>\\n            <div class=\\\"column is-8\\\">\\n                <h1>{{movie.title}}</h1>\\n                <div class=\\\"movie__date\\\">{{movie.release_date}}</div>\\n                <div class=\\\"movie__rating\\\">{{movie.vote_average}}</div>\\n                <p>{{movie.tagline}}</p>\\n                <p>{{ movie.overview }}</p>\\n                <div class=\\\"genres\\\">\\n                    <span class=\\\"label\\\">Genres: </span>\\n                    <span *ngFor=\\\"let genre of movie.genres\\\" class=\\\"genre\\\">{{genre.name}}</span>\\n                </div>\\n                <div class=\\\"columns\\\">\\n                    <div class=\\\"column\\\">\\n                        <div class=\\\"data\\\">\\n                            <h6 class=\\\"label\\\">Status:</h6>\\n                            <p>{{movie.status}}</p>\\n                        </div>\\n                        <div class=\\\"data\\\">\\n                            <h6 class=\\\"label\\\">Release Information:</h6>\\n                            <p>{{movie.release_date}}</p>\\n                        </div>\\n                        <div class=\\\"data\\\">\\n                            <h6 class=\\\"label\\\">Original Language:</h6>\\n                            <p>{{movie.original_language}}</p>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"column\\\">\\n                        <div class=\\\"data\\\">\\n                            <h6 class=\\\"label\\\">Runtime:</h6>\\n                            <p>{{movie.runtime}}</p>\\n                        </div>\\n                        <div class=\\\"data\\\">\\n                            <h6 class=\\\"label\\\">Revenue:</h6>\\n                            <p>{{movie.revenue | currency}}</p>\\n                        </div>\\n                        <div class=\\\"data\\\">\\n                            <h6 class=\\\"label\\\">Homepage:</h6>\\n                            <p><a href=\\\"{{movie.homepage}}\\\" target=\\\"_blank\\\">{{movie.homepage}}</a></p>\\n                        </div>\\n                        <div class=\\\"data\\\">\\n                            <h6 class=\\\"label\\\">Production Companies:</h6>\\n                            <p *ngFor=\\\"let company of movie.production_companies\\\">{{company.name}}</p>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <!--<div class=\\\"\\\" *ngIf=\\\"movieVideo\\\">-->\\n    <!--    <div id=\\\"videos\\\" *ngIf=\\\"movieVideo.results.length != 0\\\">-->\\n    <!--        <iframe id=\\\"ytplayer\\\" type=\\\"text/html\\\" width=\\\"100%\\\" height=\\\"315\\\"-->\\n    <!--            [src]=\\\"getYoutubeEmbed(movieVideo.results[0].key)\\\"-->\\n    <!--            frameborder=\\\"0\\\">-->\\n    <!--        </iframe>-->\\n    <!--    </div>-->\\n    <!--</div>-->\\n    <div class=\\\"movie__home\\\" *ngIf=\\\"section == 'home'\\\">\\n        <div id=\\\"casts\\\" *ngIf=\\\"movieCredits\\\">\\n            <div class=\\\"columns\\\">\\n                <h5 class=\\\"column\\\">Feature Casts</h5>\\n                <a class=\\\"column\\\" [routerLink]=\\\"['/movie', movie.id, 'casts']\\\">View full casts</a>\\n            </div>\\n            <div class=\\\"columns\\\">\\n                <person class=\\\"column is-6-mobile is-3-tablet is-2-desktop is-2-widescreen is-2-fullhd\\\" *ngFor=\\\"let cast of movieCredits.cast.slice(0, 6)\\\" [person]=cast></person>\\n            </div>\\n        </div>\\n        <div id=\\\"crews\\\" *ngIf=\\\"movieCredits\\\">\\n            <div class=\\\"columns\\\">\\n                <h5 class=\\\"column\\\">Feature Crews</h5>\\n                <a class=\\\"column\\\" [routerLink]=\\\"['/movie', movie.id, 'casts']\\\">View full crews</a>\\n            </div>\\n            <div class=\\\"columns\\\">\\n                <person class=\\\"column is-6-mobile is-3-tablet is-2-desktop is-2-widescreen is-2-fullhd\\\" *ngFor=\\\"let cast of movieCredits.crew.slice(0, 6)\\\" [person]=cast></person>\\n            </div>\\n        </div>\\n        <div id=\\\"similar-movies\\\" *ngIf=\\\"similarMovies\\\">\\n            <div class=\\\"columns\\\">\\n                <h5 class=\\\"column\\\">Similar Movies</h5>\\n                <a class=\\\"column\\\" [routerLink]=\\\"['/movie', movie.id, 'similar']\\\">View All Similar Movies</a>\\n            </div>\\n            <movie-list type=\\\"movie\\\" list=\\\"movie\\\" [movies]=(similarMovies)></movie-list>\\n        </div>\\n    </div>\\n    <div class=\\\"container\\\" *ngIf=\\\"section == 'reviews'\\\">\\n        <div id=\\\"reviews\\\" *ngIf=\\\"movieReviews\\\">\\n            <h3>Reviews</h3>\\n            <div class=\\\"row card\\\" *ngFor=\\\"let review of movieReviews.results\\\">\\n                <div class=\\\"col s2\\\">\\n                    <p>{{ review.author }}</p>\\n                </div>\\n                <div class=\\\"col s10\\\">\\n                    <p>{{ review.content }}</p>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"container\\\" *ngIf=\\\"section == 'casts'\\\">\\n        <div class=\\\"columns is-multiline\\\" *ngIf=\\\"movieCredits\\\">\\n            <person class=\\\"column is-6-mobile is-3-tablet is-2-desktop is-2-widescreen is-2-fullhd\\\" *ngFor=\\\"let cast of movieCredits.cast\\\" [person]=cast></person>\\n            <person class=\\\"column is-6-mobile is-3-tablet is-2-desktop is-2-widescreen is-2-fullhd\\\" *ngFor=\\\"let cast of movieCredits.crew\\\" [person]=cast></person>\\n        </div>\\n    </div>\\n    <div class=\\\"container\\\" *ngIf=\\\"section == 'images'\\\">\\n        <div id=\\\"images\\\" *ngIf=\\\"movieImages\\\">\\n            <div class=\\\"columns is-mobile is-multiline\\\">\\n                <div class=\\\"column is-6-mobile is-3-tablet is-2-desktop is-2-widescreen is-2-fullhd\\\" *ngFor=\\\"let poster of movieImages.posters; let i = index\\\">\\n                    <img src=\\\"https://image.tmdb.org/t/p/w500{{poster.file_path}}\\\" (click)=\\\"previewImage(poster, i)\\\" />\\n                </div>\\n            </div>\\n            <div class=\\\"columns is-mobile is-multiline\\\">\\n                <div class=\\\"column is-6-mobile is-3-tablet is-2-desktop is-2-widescreen is-2-fullhd\\\" *ngFor=\\\"let backdrop of movieImages.backdrops\\\">\\n                    <img src=\\\"https://image.tmdb.org/t/p/w500{{backdrop.file_path}}\\\" />\\n                </div>\\n            </div>\\n        </div>\\n        <section *ngIf=\\\"modalOpen\\\" class=\\\"movie__imagesModal {{modalOpen ? 'open' : ''}}\\\" (click)=\\\"closeModal()\\\">\\n            <img class=\\\"movie__currentImage\\\" src=\\\"https://image.tmdb.org/t/p/w500{{movieImages.posters[currentImage].file_path}}\\\" />\\n        </section>\\n    </div>\\n</div>\"","module.exports = \"#movie {\\n  position: relative; }\\n\\n.movie__backdrop {\\n  background-attachment: fixed;\\n  background-repeat: no-repeat;\\n  background-size: cover;\\n  background-position: 50% 50%;\\n  width: 100%;\\n  height: 100%;\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  -webkit-filter: blur(5px);\\n  -moz-filter: blur(5px);\\n  -o-filter: blur(5px);\\n  -ms-filter: blur(5px);\\n  filter: blur(5px); }\\n\\n.movie__home,\\n.movie__tabs {\\n  position: relative;\\n  z-index: 1; }\\n\\n#movie__header {\\n  color: #ffffff;\\n  position: relative; }\\n\\n.movie__info {\\n  padding: 5%; }\\n\\n.label {\\n  color: #fcb208; }\\n\\n.genre {\\n  display: inline-block;\\n  background: #ffffff;\\n  color: #000000;\\n  padding: 5px;\\n  border-radius: 5px;\\n  margin: 0 5px 5px 0;\\n  font-size: 11px; }\\n\\n.movie__imagesModal {\\n  position: fixed;\\n  width: 100%;\\n  height: 100%;\\n  top: 0;\\n  left: 0;\\n  background-color: rgba(0, 0, 0, 0.8);\\n  transition: all 0.3 ease;\\n  -webkit-transform: scale(0);\\n          transform: scale(0);\\n  z-index: 12; }\\n\\n.movie__imagesModal.open {\\n  -webkit-transform: scale(1);\\n          transform: scale(1); }\\n\\n.movie__currentImage {\\n  margin: auto; }\\n\"","import { Component, Input, OnInit, HostListener } from '@angular/core';\nimport { ActivatedRoute, Params }   from '@angular/router';\nimport { Location }                 from '@angular/common';\nimport { Title, DomSanitizer } from '@angular/platform-browser';\n\n//Import the switchMap operator to use later with the route parameters Observable.\nimport 'rxjs/add/operator/switchMap';\n\nimport { Movie } from '../../models/movie';\nimport { Movies } from '../../models/movies';\nimport { MovieCredits } from '../../models/movieCredits';\nimport { MovieImage } from '../../models/movieImage';\nimport { MovieVideo } from '../../models/movieVideo';\nimport { MovieReviews } from '../../models/movieReviews';\nimport { MovieService } from '../../services/movie.service';\n\n@Component({\n  selector: 'movie',\n  templateUrl: './movie.component.html',\n  styleUrls: ['./movie.component.scss']\n})\nexport class MovieComponent implements OnInit {\n  movie: Movie;\n  movieCredits: MovieCredits;\n  movieImages: MovieImage;\n  movieVideo: MovieVideo;\n  movieReviews: MovieReviews;\n  section: String;\n  similarMovies: Movies;\n  \n  modalOpen: boolean = false;\n  currentImage: any = 0;\n\n  constructor(\n    private movieService: MovieService,\n    private route: ActivatedRoute,\n    private location: Location,\n    private titleService: Title,\n    private sanitizier: DomSanitizer\n  ) { }\n\n  ngOnInit() {\n    if (typeof this.route.snapshot.params['section'] != 'undefined') {\n      this.section = this.route.snapshot.params['section'];\n    } else {\n      this.section = 'home';\n    }\n    this.route.params.subscribe(params => {\n      //scroll page to top\n      window.scrollTo(0, 0);\n      \n      this.movieService.getMovieDetail(+params['id'])\n      .then(movie => {\n        this.movie = movie;\n        this.titleService.setTitle(movie.title);\n      });\n      \n      this.movieService.getMovieImages(+params['id'])\n      .then(movieImages => this.movieImages = movieImages);\n      \n      this.movieService.getMovieCredits(+params['id'])\n      .then(movieCredits => this.movieCredits = movieCredits);\n      \n      this.movieService.getMovieVideos(+params['id'])\n      .then(movieVideo => this.movieVideo = movieVideo);\n      \n      this.movieService.getMovieReviews(+params['id'])\n      .then(movieReviews => {\n        this.movieReviews = movieReviews;\n      });\n      \n      this.movieService.getSimilarMovies(+params['id'])\n      .then(similarMovies => {\n        this.similarMovies = similarMovies;\n      });\n    });\n  }\n\n  changeSection(section): void {\n    this.section = section;\n  }\n  getYoutubeEmbed(key) {\n    return this.sanitizier.bypassSecurityTrustResourceUrl('https://www.youtube.com/embed/' + key + '?autoplay=0');\n  }\n  previewImage(image, index) {\n    console.log(index);\n    this.currentImage = index;\n    this.modalOpen = true;\n  }\n  closeModal() {\n    this.modalOpen = false;\n  }\n  @HostListener('document:keyup', ['$event'])\n  handleKeyboardEvent(event: KeyboardEvent) { \n    if (event.key == 'ArrowRight') {\n      if (this.currentImage == this.movieImages.posters.length - 1) {\n        this.currentImage = 0\n      } else {\n        this.currentImage += 1;\n      }\n    }\n    if (event.key == 'ArrowLeft') {\n      if (this.currentImage == 0) {\n        this.currentImage = this.movieImages.posters.length - 1;\n      } else {\n        this.currentImage -= 1;\n      }\n    }\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"tab\\\">\\n    <a class=\\\"tab__link\\\" [class.is-active]=\\\"selectedLink == link\\\" *ngFor=\\\"let link of links\\\" (click)=\\\"gotoLink(link)\\\">{{formatTitle(link)}}</a>\\n</div>\\n\\n<movie-list [movies]=movies [type]=type [list]=list [totalPages]=totalPages [currentPage]=currentPage></movie-list>\\n\"","import { Title } from '@angular/platform-browser';\nimport { ActivatedRoute, Params, Router }   from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\n\nimport { Movie } from '../../models/movie';\nimport { Movies } from '../../models/movies';\nimport { MovieService } from '../../services/movie.service';\nimport { UtilsService } from '../../services/utils.service';\n\n@Component({\n  selector: 'movies',\n  templateUrl: './movies.component.html',\n  styleUrls: ['./movies.component.css']\n})\nexport class MoviesComponent implements OnInit {\n\n  selectedLink: String;\n  links: Array<String>;\n  movies: Movies;\n  selectedMovie: Movie;\n  list: String;\n  type: string;\n  currentPage: Number;\n  totalPages: Array<Number>;\n  \n  constructor(\n    private titleService: Title,\n    private movieService: MovieService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private utilsService: UtilsService\n  ) {}\n  \n  ngOnInit(): void {\n    this.list = 'movie';\n    this.links = [\n      'now_playing',\n      'popular',\n      'top_rated',\n      'upcoming'\n    ];\n\n    this.route.params\n    // (+) converts string 'id' to a number\n    .switchMap((params: Params) => this.movieService.getMovies(params['type'], params['page']))\n    .subscribe((movies: Movies) => {\n      this.type = this.route.snapshot.params['type'];\n      this.selectedLink = this.route.snapshot.params['type'];\n      this.movies = movies;\n      this.currentPage = movies.page;\n      this.totalPages = Array(movies.total_pages).fill(1).map((x,i)=>i)\n      // set Page title\n      var title = this.utilsService.formatTitle(this.route.snapshot.params['type']);\n      this.titleService.setTitle('Movies - ' + title);\n    });\n  }\n  gotoLink(link) {\n    this.selectedLink = link;\n    this.movies.results = [];\n    this.router.navigate(['movies/' + link]); \n  }\n  \n  onSelect(movie: Movie): void {\n    this.selectedMovie = movie;\n  }\n  \n  formatTitle(title: string): string {\n    return this.utilsService.formatTitle(title);\n  }\n\n}\n","module.exports = \"<div class=\\\"columns is-multiline\\\" *ngIf=\\\"news\\\" [@newsAnimation]=\\\"news.length\\\">\\n    <a class=\\\"column is-12-mobile is-4-tablet is-3-desktop is-3-widescreen is-3-fullhd\\\" *ngFor=\\\"let item of news\\\" href=\\\"{{item.link}}\\\" target=\\\"_blank\\\">\\n        <div class=\\\"news\\\">\\n            <figure class=\\\"news__image\\\">\\n                <img class=\\\"news__toc\\\" src=\\\"{{item.featured_image.source}}\\\" alt=\\\"{{item.title}}\\\">\\n            </figure>\\n            <figcaption class=\\\"news__content\\\">\\n                <p [innerHTML]=item.title></p>\\n            </figcaption>\\n        </div>\\n    </a>\\n</div>\"","module.exports = \".news {\\n  color: #fcb208;\\n  transition: border 0.3s ease;\\n  border: 1px solid transparent; }\\n  .news:hover {\\n    color: #fcb208;\\n    border: 1px solid #fcb208; }\\n  .news:hover .news__toc {\\n      -webkit-transform: scale(1.1);\\n              transform: scale(1.1); }\\n  .news__image {\\n  overflow: hidden; }\\n  .news__toc {\\n  transition: -webkit-transform 0.2s ease-in-out;\\n  transition: transform 0.2s ease-in-out;\\n  transition: transform 0.2s ease-in-out, -webkit-transform 0.2s ease-in-out; }\\n  .news__content {\\n  padding: 20px; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Title, DomSanitizer } from '@angular/platform-browser';\nimport { trigger,style,transition,animate,keyframes,query,stagger } from '@angular/animations';\n\nimport { News } from '../../models/news';\nimport { NewsService } from '../../services/news.service';\n\n@Component({\n  selector: 'news',\n  templateUrl: './news.component.html',\n  styleUrls: ['./news.component.scss'],\n  animations: [\n    trigger('newsAnimation', [\n      transition('* => *', [\n        query(':enter', style({opacity: 0}), {optional: true}),\n        query(':enter', stagger('200ms', [\n          animate('0.3s ease', keyframes([\n            style({opacity: 0, transform: 'translateX(-20%)', offset: 0}),\n            style({opacity: 0.5, transform: 'translateX(20px)', offset: 0.5}),\n            style({opacity: 1, transform: 'translateX(0)', offset: 1}),\n          ]))\n        ]), {optional: true})\n      ])\n    ])\n  ]\n})\nexport class NewsComponent implements OnInit {\n  \n  news: Array<News>;\n\n  constructor(\n    private newsService: NewsService,\n    private titleService: Title\n  ) { }\n\n  ngOnInit() {\n    this.newsService.getNewsFromRottentomatoes()\n      .then(news => {\n        this.news = news;\n        this.titleService.setTitle('Movie Paradise - News');\n      });\n  }\n\n}\n","module.exports = \"<person-list [persons]=persons></person-list>\"","module.exports = \"\"","import { Title } from '@angular/platform-browser';\nimport { ActivatedRoute, Params }   from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\n\nimport { Person } from '../../models/person/person';\nimport { Persons } from '../../models/person/persons';\nimport { PersonService } from '../../services/person.service';\n\n@Component({\n  selector: 'app-persons',\n  templateUrl: './persons.component.html',\n  styleUrls: ['./persons.component.scss']\n})\nexport class PersonsComponent implements OnInit {\n\n  selectedLink: String;\n  links: Array<String>;\n  persons: Persons;\n  selectedPerson: Person;\n\n  constructor( \n    private titleService: Title,\n    private personService: PersonService,\n    private route: ActivatedRoute,) { }\n\n  ngOnInit() :void{\n    this.links=[\n      'popular'\n    ];\n    this.selectedLink = 'popular';\n\n    this.route.params\n    .switchMap((params: Params) => this.personService.getPopular(params['type']))\n    .subscribe((persons: Persons) =>{\n      this.persons = persons;\n    })\n  \n  }\n\n\n  \n}\n","module.exports = \"\"","module.exports = \"<p>\\n  tv works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params }   from '@angular/router';\n\nimport { TvService } from '../../services/tv.service';\n\n@Component({\n  selector: 'tv',\n  templateUrl: './tv.component.html',\n  styleUrls: ['./tv.component.css']\n})\nexport class TvComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"tab\\\">\\n    <a class=\\\"tab__link\\\" [class.is-active]=\\\"selectedLink == link\\\" *ngFor=\\\"let link of links\\\" [routerLink]=\\\"['/tvs', link]\\\" (click)=\\\"gotoLink(link)\\\">{{formatTitle(link)}}</a>\\n</div>\\n\\n<movie-list [movies]=tvs [type]=type [list]=list [totalPages]=totalPages [currentPage]=currentPage></movie-list>\"","import { Title } from '@angular/platform-browser';\nimport { ActivatedRoute, Params, Router }   from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\n\nimport { Movie } from '../../models/movie';\nimport { Movies } from '../../models/movies';\nimport { TvService } from '../../services/tv.service';\nimport { UtilsService } from '../../services/utils.service';\n\n@Component({\n  selector: 'tvs',\n  templateUrl: './tvs.component.html',\n  styleUrls: ['./tvs.component.css']\n})\nexport class TvsComponent implements OnInit {\n  \n  tvs: Movies;\n  selectedLink: String;\n  links: Array<String>;\n  currentPage: Number;\n  totalPages: Array<Number>;\n  list: String;\n  type: string;\n  \n  constructor(\n    private titleService: Title,\n    private tvService: TvService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private utilsService: UtilsService\n  ) {}\n  \n  ngOnInit() {\n    this.list = 'tv';\n    this.links = [\n      'airing_today',\n      'on_the_air',\n      'popular',\n      'top_rated'\n    ];\n    this.selectedLink = 'airing_today';\n\n    this.route.params\n    // (+) converts string 'id' to a number\n    .switchMap((params: Params) => this.tvService.getTvs(params['type'], params['page']))\n    .subscribe((tvs: Movies) => {\n      this.type = this.route.snapshot.params['type'];\n      this.selectedLink = this.route.snapshot.params['type'];\n      this.tvs = tvs;\n      this.currentPage = tvs.page;\n      this.totalPages = Array(tvs.total_pages).fill(1).map((x,i)=>i)\n      // set Page title\n      var title = this.utilsService.formatTitle(this.route.snapshot.params['type']);\n      this.titleService.setTitle('TVs - ' + title);\n    });\n  }\n  \n  gotoLink(link) {\n    this.selectedLink = link;\n    this.tvs.results = [];\n    this.router.navigate(['tvs/' + link]); \n  }\n  \n  formatTitle(title: string): string {\n    return this.utilsService.formatTitle(title);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Headers, Http } from '@angular/http';\n\nimport 'rxjs/add/operator/toPromise';\n\nimport { Movies } from '../models/movies';\nimport { Movie } from '../models/movie';\nimport { MovieCredits } from '../models/movieCredits';\nimport { MovieImage } from '../models/movieImage';\nimport { MovieVideo } from '../models/movieVideo';\nimport { MovieReviews } from '../models/movieReviews';\n\n@Injectable()\nexport class MovieService {\n    \n    private baseUrl = 'https://api.themoviedb.org/3/movie/';\n    private apiKey = '?api_key=8109b23cc9abaf02cf3c699ec62ccc19';\n    private headers = new Headers({'Content-Type': 'application/json'});\n\n    constructor(private http: Http) { }\n    \n    getMovies(type: String, page: number): Promise<Movies> {\n        const moviesUrl = this.baseUrl + type + this.apiKey + '&page=' + page;\n        const movies = this.http.get(moviesUrl)\n                        .toPromise()\n                        .then(response => response.json() as Movies)\n                        .catch(this.handleError);\n        return movies;\n    }\n    \n    getMovieDetail(id: number): Promise<Movie> {\n        const movieDetail = this.baseUrl + id + this.apiKey;\n        const movie = this.http.get(movieDetail)\n                        .toPromise()\n                        .then(response => response.json() as Movie)\n                        .catch(this.handleError);\n        return movie;\n    }\n    \n    getMovieImages(id: number): Promise<MovieImage> {\n        const movieCredits = this.baseUrl + id + '/images' + this.apiKey;\n        return this.http.get(movieCredits)\n                    .toPromise()\n                    .then(res => res.json() as MovieImage)\n                    .catch(this.handleError);\n    }\n    \n    getMovieCredits(id: number): Promise<MovieCredits> {\n        const movieCredits = this.baseUrl + id + '/credits' + this.apiKey;\n        return this.http.get(movieCredits)\n                    .toPromise()\n                    .then(res => res.json() as MovieCredits)\n                    .catch(this.handleError);\n    }\n    \n    getMovieVideos(id: number): Promise<MovieVideo> {\n        const movieVideo = this.baseUrl + id + '/videos' + this.apiKey;\n        return this.http.get(movieVideo)\n                    .toPromise()\n                    .then(res => res.json() as MovieVideo)\n                    .catch(this.handleError);\n    }\n    \n    getMovieReviews(id: number): Promise<MovieReviews> {\n        const movieReviews = this.baseUrl + id +'/reviews' + this.apiKey;\n        return this.http.get(movieReviews)\n                    .toPromise()\n                    .then(res => res.json() as MovieReviews)\n                    .catch(this.handleError);\n    }\n    \n    getSimilarMovies(id: number): Promise<Movies> {\n        const similarMovies = this.baseUrl + id + '/similar' + this.apiKey;\n        return this.http.get(similarMovies)\n                    .toPromise()\n                    .then(res => res.json() as Movies)\n                    .catch(this.handleError);\n    }\n    \n    private handleError(error: any): Promise<any> {\n        console.error('An error occurred', error); // for demo purposes only\n        return Promise.reject(error.message || error);\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Headers, Http } from '@angular/http';\n\nimport { News } from '../models/news';\n\nimport 'rxjs/add/operator/toPromise';\n\n@Injectable()\nexport class NewsService {\n    \n    private headers = new Headers({'Content-Type': 'application/json'});\n\n    constructor(private http: Http) {\n    }\n    \n    getNewsFromRottentomatoes(): Promise<News[]> {\n        const url = 'https://editorial.rottentomatoes.com/wp-json/articles/';\n        const news = this.http.get(url)\n                        .toPromise()\n                        .then(response => response.json() as News[])\n                        .catch(this.handleError);\n        return news;\n    }\n    \n    private handleError(error: any): Promise<any> {\n        console.error('An error occurred', error); // for demo purposes only\n        return Promise.reject(error.message || error);\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Headers, Http } from '@angular/http';\n\nimport 'rxjs/add/operator/toPromise';\n\nimport { Persons } from '../models/person/persons';\nimport { Person } from '../models/person/person';\n\n@Injectable()\n\nexport class PersonService{\n    private baseUrl = 'https://api.themoviedb.org/3/person/';\n    private apiKey = '?api_key=8109b23cc9abaf02cf3c699ec62ccc19';\n    private headers = new Headers({'Content-Type': 'application/json'});\n\n\n    constructor(private http: Http){}\n\n    getPopular(type: String): Promise<Persons>{\n        const personsUrl = this.baseUrl + type + this.apiKey + '&page=1';\n        const persons = this.http.get(personsUrl)\n        .toPromise()\n        .then(response => response.json() as Persons)\n        .catch(this.handleError);\n        return persons;\n    }\n\n    private handleError(error: any): Promise<any> {\n        console.error('An error occurred', error); // for demo purposes only\n        return Promise.reject(error.message || error);\n    }\n}","import { Injectable } from '@angular/core';\nimport { Headers, Http } from '@angular/http';\n\nimport 'rxjs/add/operator/toPromise';\n\nimport { Movies } from '../models/movies';\n\n@Injectable()\nexport class SearchService {\n    private baseUrl = 'https://api.themoviedb.org/3/search/multi';\n    private apiKey = '?api_key=8109b23cc9abaf02cf3c699ec62ccc19';\n    private headers = new Headers({'Content-Type': 'application/json'});\n    \n    constructor(private http: Http) { }\n    \n    getResults(search: String): Promise<Movies> {\n        const searchUrl = this.baseUrl + this.apiKey + '&query=' + search;\n        const results = this.http.get(searchUrl).toPromise().then(res => res.json() as Movies).catch(this.handleError);\n        return results;\n    }\n    private handleError(error: any): Promise<any> {\n        console.error('An error occurred', error); // for demo purposes only\n        return Promise.reject(error.message || error);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Headers, Http } from '@angular/http';\nimport { Token } from '../models/token';\nimport { Session } from '../models/session';\n\nimport 'rxjs/add/operator/toPromise';\n\n@Injectable()\nexport class SessionService {\n    private baseUrl = 'https://api.themoviedb.org/3/authentication/';\n    private apiKey = '?api_key=8109b23cc9abaf02cf3c699ec62ccc19';\n    \n    constructor(private http: Http) { }\n    \n    getToken(username: string, password: string): Promise<Session> {\n        const newTokenUrl = this.baseUrl + 'token/new' + this.apiKey;\n        const newToken = this.http.get(newTokenUrl)\n                        .toPromise()\n                        .then(response => this.validateLogin(username, password, response.json()))\n                        .catch(this.handleError);\n        return newToken;\n    }\n    \n    validateLogin(username: string, password: string, token: Token): Promise<Token> {\n        const data = '&username=' + username + '&password=' + password + '&request_token=' + token.request_token;\n        const validateUrl = this.baseUrl + 'token/validate_with_login' + this.apiKey + data;\n        const validateToken = this.http.get(validateUrl)\n                                .toPromise()\n                                .then(response => this.getSession(response.json().request_token))\n                                .catch(this.handleError);\n        return validateToken;\n    }\n    \n    getSession(request_token: string): Promise<Token> {\n        const sessionUrl = this.baseUrl + 'session/new' + this.apiKey + '&request_token=' + request_token;\n        const session = this.http.get(sessionUrl)\n                                .toPromise()\n                                .then(response => response.json() as Token)\n                                .catch(this.handleError);\n        return session;\n    }\n    \n    private handleError(error: any): Promise<any> {\n        console.error('An error occurred', error); // for demo purposes only\n        return Promise.reject(error.message || error);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Headers, Http } from '@angular/http';\n\nimport 'rxjs/add/operator/toPromise';\n\nimport { Movies } from '../models/movies';\nimport { Movie } from '../models/movie';\n\n@Injectable()\nexport class TvService {\n    \n    private baseUrl = 'https://api.themoviedb.org/3/tv/';\n    private apiKey = '?api_key=8109b23cc9abaf02cf3c699ec62ccc19';\n    private headers = new Headers({'Content-Type': 'application/json'});\n\n    constructor(private http: Http) { }\n  \n    getTvs(type: String, page: number): Promise<Movies> {\n        const url = this.baseUrl + type + this.apiKey + '&page=' + page;\n        const tvs = this.http.get(url)\n                        .toPromise()\n                        .then(response => response.json() as Movies)\n                        .catch(this.handleError);\n        return tvs;\n    }\n    \n    getDetail(id: number) {\n        const url = this.baseUrl + id + this.apiKey;\n        const tv = this.http.get(url).toPromise().then(res => res.json()).catch(this.handleError);\n        return tv;\n    }\n    \n    private handleError(error: any): Promise<any> {\n        console.error('An error occurred', error); // for demo purposes only\n        return Promise.reject(error.message || error);\n    }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class UtilsService {\n\n  constructor() { }\n  \n  //need to find out string vs String\n  formatTitle(title: string): string {\n      //formate 'now_playing' to 'Noew Playing'\n      return title.split('_').map((word) => {\n          return word.charAt(0).toUpperCase() + word.slice(1);\n      }).join(' ');\n  }\n  getImagePath(file: string): string {\n    if (file) {\n      return 'https://image.tmdb.org/t/p/w500' + file;\n    } else {\n      return 'https://netbranding.co.nz/wp-content/uploads/2014/04/avatar-2.png';\n    }\n  }\n\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n"],"sourceRoot":""}